%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 8
%%For: (Sarah Jaffe) ()
%%Title: (fig2.4.eps)
%%CreationDate: (3/27/03) (1:41 PM)
%%BoundingBox: 65 273 534 701
%%HiResBoundingBox: 65 273.0371 533.334 700.3647
%%DocumentProcessColors: Black
%%DocumentFonts: Times-Roman
%%DocumentNeededFonts: Times-Roman
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_typography_AI5 1.0 1
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Black&White
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%%CMYKCustomColor: 1 0.9 0.1 0 (Dark Blue)
%%+ 0 0.25 1 0 (Orange Yellow)
%%+ 0.4 0.7 1 0 (Rusty Brown)
%%+ 0 0.9 1 0 (Saturn Red)
%%+ 0.45 0.9 0 0 (Violet)
%%+ 0.75 0.9 0 0 (Violet Blue)
%%+ 0.2 0 1 0 (Yellow Green)
%%+ 0.75 0.75 0.375 0 (\245Arrow1.2.color1)
%%+ 1 0.14 0.09 0 (\245DblLine1.2.color1)
%%+ 0 0.55 1 0.3 (\245Laurel.color1)
%%+ 0 0.55 1 0.12 (\245Laurel.color2)
%%+ 0 0.39 0.7 0.12 (\245Laurel.color3)
%%+ 0 0 0 1 (\245Rope.color1)
%%CMYKProcessColor: 1 1 1 1 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 0 0 1 1 1 0 1 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () 
%AI3_TemplateBox: 306 396 306 396
%AI3_TileBox: 0 0 552 728
%AI3_DocumentPreview: Macintosh_ColorPic
%AI5_ArtSize: 612 792
%AI5_RulerUnits: 1
%AI5_ArtFlags: 1 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: 34.5 739.5 1 1009 720 18 1 1 7 40 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:0 0
%%AI3_PaperRect:-30 761 582 -31
%%AI3_Margin:30 -33 -30 31
%AI7_GridSettings: 72 8 72 8 1 0 0.29 0.29 1 0.65 0.65 1
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI5 1.0 1
%%Title: (Typography Operators)
%%Version: 1.0 1
%%CreationDate:(6/10/1996) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI5 68 dict dup begin
put
/initialize
{
 begin
 begin
	Adobe_typography_AI5 begin
	Adobe_typography_AI5
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
 end
 end
	Adobe_typography_AI5 begin
} def
/terminate
{
	currentdict Adobe_typography_AI5 eq
	{
	 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	/_pntr 0 ddef
	{
		counttomark -1 roll
		dup type dup /marktype eq
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef
			} ifelse
		} ifelse
	} loop
	_tempEncode
} def
/havefont
{
	systemdict /languagelevel known
		{
		/Font resourcestatus dup
			{ exch pop exch pop }
		if
		}
		{
		systemdict /FontDirectory get 1 index known
			{ pop true }
			{
			systemdict /fileposition known
				{
				dup length 6 add exch
				Ss 6 250 getinterval
				cvs pop
				Ss exch 0 exch getinterval
				status
					{ pop pop pop pop true }
					{ false }
				ifelse
				}
				{
				pop false
				}
			ifelse
			}
		ifelse
		}
	ifelse
} def
/TE
{
	StandardEncoding 256 array copy modifyEncoding
	/_nativeEncoding exch def
} def
/subststring {
	exch 2 index exch search
	{
		exch pop
		exch dup () eq
		{
			pop exch concatstring
		}
		{
			3 -1 roll
			exch concatstring
			concatstring
		} ifelse
		exch pop true
	}
	{
		pop pop false
	} ifelse
} def
/concatstring {
	1 index length 1 index length
	1 index add
	string
	dup 0 5 index putinterval
	dup 2 index 4 index putinterval
	4 1 roll pop pop pop
} def
%
/TZ
{
	dup type /arraytype eq
	{
		/_wv exch def
	}
	{
		/_wv 0 def
	} ifelse
	/_useNativeEncoding exch def
	2 index havefont
	{
		3 index
		255 string
		cvs
		
		dup
		(_Symbol_)
		eq
		{
			pop
			2 index
			findfont
			
		}
		{
			1 index 0 eq
			{
				dup length 1 sub
				1 exch
				getinterval
				
				cvn
				findfont
			}
			{
				pop 2 index findfont
			} ifelse
		} ifelse
	}
	{
		dup 1 eq
		{
			2 index 64 string cvs
			dup (-90pv-RKSJ-) (-83pv-RKSJ-) subststring
			{
				exch pop dup havefont
				{
					findfont false
				}
				{
					pop true
				} ifelse
			}
			{
				pop	dup
				(-90ms-RKSJ-) (-Ext-RKSJ-) subststring
				{
					exch pop dup havefont
					{
						findfont false
					}
					{
						pop true
					} ifelse
				}
				{
					pop pop true
				} ifelse
			} ifelse
			{
				1 index 1 eq
				{
					/Ryumin-Light-Ext-RKSJ-V havefont
					{/Ryumin-Light-Ext-RKSJ-V}
					{/Courier}
					ifelse
				}
				{
					/Ryumin-Light-83pv-RKSJ-H havefont
					{/Ryumin-Light-83pv-RKSJ-H}
					{/Courier}
					ifelse
				} ifelse
				findfont
				[1 0 0.5 1 0 0] makefont
			} if
		}
		{
			/Courier findfont
		} ifelse
	} ifelse
	_wv type /arraytype eq
	{
		_wv makeblendedfont
	} if
	dup length 10 add dict
 begin
	mark exch
	{
		1 index /FID ne
		{
			def
		} if
		cleartomark mark
	} forall
	pop
	/FontScript exch def
	/FontDirection exch def
	/FontRequest exch def
	/FontName exch def
	counttomark 0 eq
	{
		1 _useNativeEncoding eq
		{
			/Encoding _nativeEncoding def
		} if
		cleartomark
	}
	{
		/Encoding load 256 array copy
		modifyEncoding /Encoding exch def
	} ifelse
	FontName currentdict
 end
	definefont pop
} def
/tr
{
	_ax _ay 3 2 roll
} def
/trj
{
	_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
	/Tx
	{
		dup
		currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
	} ddef
	/Tj
	{
		dup
		currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
	} ddef
} def
/a1
{
W B
} def
/e0
{
	/Tx
	{
		tr _psf
	} ddef
	/Tj
	{
		trj _pjsf
	} ddef
} def
/e1
{
W F 
} def
/i0
{
	/Tx
	{
		tr sp
	} ddef
	/Tj
	{
		trj jsp
	} ddef
} def
/i1
{
	W N
} def
/o0
{
	/Tx
	{
		tr sw rmoveto
	} ddef
	/Tj
	{
		trj swj rmoveto
	} ddef
} def
/r0
{
	/Tx
	{
		tr _ctm _pss
	} ddef
	/Tj
	{
		trj _ctm _pjss
	} ddef
} def
/r1
{
W S
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix
	_tDict begin
	/W
	{
	} def
	/h
	{
	} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le
	{
		currentpoint newpath moveto
	} if
	dup 8 eq
	{
		pop 0
	}
	{
		dup 9 eq
		{
			pop 1
		} if
	} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
	_ctm setmatrix _tm concat
	_shift aload pop _lineorientation 1 eq { exch } if translate
	_scale aload pop _lineorientation 1 eq _yokoorientation 1 eq or { exch } if scale
} def
/Tm
{
	_tm astore pop iTm 0 0 moveto
} def
/Td
{
	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq
	{
	}
	{
		_renderEnd _render get dup null ne
		{
			load exec
		}
		{
			pop
		} ifelse
	} ifelse
	/_render -1 ddef
} def
/Ta
{
	pop
} def
/Tf
{
	1 index type /nametype eq
	{
		dup 0.75 mul 1 index 0.25 mul neg
	} if
	/_fontDescent exch ddef
	/_fontAscent exch ddef
	/_fontSize exch ddef
	/_fontRotateAdjust _fontAscent _fontDescent add 2 div neg ddef
	/_fontHeight _fontSize ddef
	findfont _fontSize scalefont setfont
} def
/Tl
{
	pop neg 0 exch
	_leading astore pop
} def
/Tt
{
	pop
} def
/TW
{
	3 npop
} def
/Tw
{
	/_cx exch ddef
} def
/TC
{
	3 npop
} def
/Tc
{
	/_ax exch ddef
} def
/Ts
{
	0 exch
	_shift astore pop
	currentpoint
	iTm
	moveto
} def
/Ti
{
	3 npop
} def
/Tz
{
	count 1 eq { 100 } if
	100 div exch 100 div exch
	_scale astore pop
	iTm
} def
/TA
{
	pop
} def
/Tq
{
	pop
} def
/Tg
{
	pop
} def
/TG
{
	pop
} def
/Tv
{
	/_lineorientation exch ddef
} def
/TV
{
	/_charorientation exch ddef
} def
/Ty
{
	dup /_yokoorientation exch ddef 1 sub neg Tv
} def
/TY
{
	pop
} def
/T~
{
	Tx
} def
/Th
{
	pop pop pop pop pop
} def
/TX
{
	pop
} def
/Tk
{
	_fontSize mul 1000 div
	_lineorientation 0 eq { neg 0 } { 0 exch } ifelse
	rmoveto
	pop
} def
/TK
{
	2 npop
} def
/T*
{
	_leading aload pop
	_lineorientation 0 ne { exch } if
	Td
} def
/T*-
{
	_leading aload pop
	_lineorientation 0 ne { exch } if
	exch neg exch neg
	Td
} def
/T-
{
	_ax neg 0 rmoveto
	_lineorientation 1 eq _charorientation 0 eq and { 1 TV _hyphen Tx 0 TV } { _hyphen Tx } ifelse
} def
/T+
{
} def
/TR
{
	_ctm currentmatrix pop
	_tm astore pop
	iTm 0 0 moveto
} def
/TS
{
	currentfont 3 1 roll
	/_Symbol_ findfont _fontSize scalefont setfont
	
	0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	setfont
} def
/Xb
{
	pop pop
} def
/Tb /Xb load def
/Xe
{
	pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
%
/X^
{
	currentfont 5 1 roll
	dup havefont
		{
		findfont _fontSize scalefont setfont
		}
		{
		pop
		exch
		} ifelse
	2 index 0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	pop	pop
	setfont
} def
/T^	/X^	load def
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeFont: Times-Roman
userdict /_useSmoothShade false put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
%AI55J_Tsume: None
%AI3_BeginEncoding: _Times-Roman Times-Roman
[/_Times-Roman/Times-Roman 0 0 0 TZ
%AI3_EndEncoding TrueType
[161/degree 173/notequal 176/infinity/plusminus/lessequal/greaterequal
181/mu/partialdiff/summation/product/pi/integral 189/Omega 
195/radical 197/approxequal 198/Delta 214/divide/lozenge 240/apple
/_Symbol_/Symbol 0 0 0 TZ
%AI3_BeginPattern: (Scales)
(Scales) 1.6 9.3475 48.088 55.8355 [
(0 O 0 R 1 g
 1 G
) @
_ &
(0 O 0 R 0 g
 0 G
) @
(
%AI6_BeginPatternLayer
800 Ar
0 J 0 j 0.3 w 4 M []0 d
%AI3_Note:
0 D
0 XR
17.0956 9.3475 m
12.8162 9.3475 9.3475 5.8787 9.3475 1.6 C
9.3475 5.8787 5.8787 9.3475 1.6 9.3475 C
1.6 13.6262 5.0687 17.095 9.3475 17.095 c
13.6268 17.095 17.0956 13.6262 17.0956 9.3475 C
s
32.5918 9.3475 m
28.3125 9.3475 24.8437 5.8787 24.8437 1.6 C
24.8437 5.8787 21.3743 9.3475 17.0956 9.3475 C
17.0956 13.6262 20.5644 17.095 24.8437 17.095 c
29.1224 17.095 32.5918 13.6262 32.5918 9.3475 C
s
48.088 9.3475 m
43.8087 9.3475 40.3399 5.8787 40.3399 1.6 C
40.3399 5.8787 36.8705 9.3475 32.5918 9.3475 C
32.5918 13.6262 36.0606 17.095 40.3399 17.095 c
44.6186 17.095 48.088 13.6262 48.088 9.3475 C
s
17.0956 40.3393 m
12.8162 40.3393 9.3475 36.8699 9.3475 32.5912 C
9.3475 36.8699 5.8787 40.3393 1.6 40.3393 C
1.6 44.6181 5.0687 48.0874 9.3475 48.0874 c
13.6268 48.0874 17.0956 44.6181 17.0956 40.3393 C
s
17.0956 24.8431 m
12.8162 24.8431 9.3475 21.3743 9.3475 17.095 C
9.3475 21.3743 5.8787 24.8431 1.6 24.8431 C
1.6 29.1218 5.0687 32.5912 9.3475 32.5912 c
13.6268 32.5912 17.0956 29.1218 17.0956 24.8431 C
s
32.5918 24.8431 m
28.3125 24.8431 24.8437 21.3743 24.8437 17.095 C
24.8437 21.3743 21.3743 24.8431 17.0956 24.8431 C
17.0956 29.1218 20.5644 32.5912 24.8437 32.5912 c
29.1224 32.5912 32.5918 29.1218 32.5918 24.8431 C
s
48.088 24.8431 m
43.8087 24.8431 40.3399 21.3743 40.3399 17.095 C
40.3399 21.3743 36.8705 24.8431 32.5918 24.8431 C
32.5918 29.1218 36.0606 32.5912 40.3399 32.5912 c
44.6186 32.5912 48.088 29.1218 48.088 24.8431 C
s
32.5918 40.3393 m
28.3125 40.3393 24.8437 36.8699 24.8437 32.5912 C
24.8437 36.8699 21.3743 40.3393 17.0956 40.3393 C
17.0956 44.6181 20.5644 48.0874 24.8437 48.0874 c
29.1224 48.0874 32.5918 44.6181 32.5918 40.3393 C
s
48.088 40.3393 m
43.8087 40.3393 40.3399 36.8699 40.3399 32.5912 C
40.3399 36.8699 36.8705 40.3393 32.5918 40.3393 C
32.5918 44.6181 36.0606 48.0874 40.3399 48.0874 c
44.6186 48.0874 48.088 44.6181 48.088 40.3393 C
s
17.0956 55.8355 m
12.8162 55.8355 9.3475 52.3662 9.3475 48.0874 C
9.3475 52.3662 5.8787 55.8355 1.6 55.8355 C
1.6 60.1143 5.0687 63.5836 9.3475 63.5836 c
13.6268 63.5836 17.0956 60.1143 17.0956 55.8355 C
s
32.5918 55.8355 m
28.3125 55.8355 24.8437 52.3662 24.8437 48.0874 C
24.8437 52.3662 21.3743 55.8355 17.0956 55.8355 C
17.0956 60.1143 20.5644 63.5836 24.8437 63.5836 c
29.1224 63.5836 32.5918 60.1143 32.5918 55.8355 C
s
48.088 55.8355 m
43.8087 55.8355 40.3399 52.3662 40.3399 48.0874 C
40.3399 52.3662 36.8705 55.8355 32.5918 55.8355 C
32.5918 60.1143 36.0606 63.5836 40.3399 63.5836 c
44.6186 63.5836 48.088 60.1143 48.088 55.8355 C
s
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (Arrow1.2.out/in)
(Arrow1.2.out/in) 1 1 39.4039 39.4039 [
%AI3_Tile
(0 O 0 R 0.75 0.75 0.375 0 (\245Arrow1.2.color1) 0 x
 0.75 0.75 0.375 0 (\245Arrow1.2.color1) 0 X
) @
(
%AI6_BeginPatternLayer
800 Ar
1 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
0 XR
33.9039 15.6186 m
39.4247 20.2019 L
39.4247 20.2019 L
33.8869 24.6252 L
S
39.2997 20.2019 m
24.5706 20.2019 l
20.4039 20.4792 20.4039 16.8125 v
20.4039 13.1458 20.4039 12.5625 y
S
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Arrow1.2.side)
(Arrow1.2.side) 1 1 39.404 39.4039 [
%AI3_Tile
(0 O 0 R 0.75 0.75 0.375 0 (\245Arrow1.2.color1) 0 x
 0.75 0.75 0.375 0 (\245Arrow1.2.color1) 0 X
) @
(
%AI6_BeginPatternLayer
800 Ar
1 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
0 XR
20.202 20.202 m
39.404 20.202 l
S
33.904 15.6186 m
39.4248 20.202 L
39.4248 20.202 L
33.887 24.6252 L
S
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Bricks)
(Bricks) 2.565 5.19 74.565 77.19 [
(0 O 0 R 0.3 0.85 0.85 0 k
 0.3 0.85 0.85 0 K
) @
_ &
(0 O 0 R 1 g
 1 G
) @
(
%AI6_BeginPatternLayer
800 Ar
0 J 0 j 0.3 w 4 M []0 d
%AI3_Note:
0 D
0 XR
1.6 73.6 m
75.6 73.6 l
S
1.6 66.399 m
75.6 66.399 L
S
1.6 59.199 m
75.6 59.199 L
S
1.6 51.998 m
75.6 51.998 L
S
1.6 44.798 m
75.6 44.798 L
S
1.6 37.597 m
75.6 37.597 L
S
1.6 30.397 m
75.6 30.397 L
S
1.6 23.196 m
75.6 23.196 L
S
1.6 15.996 m
75.6 15.996 L
S
1.6 8.796 m
75.6 8.796 L
S
70.975 73.6 m
70.975 66.412 l
S
56.575 73.6 m
56.575 66.412 L
S
42.175 73.6 m
42.175 66.412 L
S
27.775 73.6 m
27.775 66.412 L
S
13.375 73.6 m
13.375 66.412 L
S
70.975 59.162 m
70.975 51.975 l
S
56.575 59.162 m
56.575 51.975 L
S
42.175 59.162 m
42.175 51.975 L
S
27.775 59.162 m
27.775 51.975 L
S
13.375 59.162 m
13.375 51.975 L
S
70.975 44.787 m
70.975 37.6 l
S
56.575 44.787 m
56.575 37.6 L
S
42.175 44.787 m
42.175 37.6 L
S
27.775 44.787 m
27.775 37.6 L
S
13.375 44.787 m
13.375 37.6 L
S
70.975 30.412 m
70.975 23.225 l
S
56.575 30.412 m
56.575 23.225 L
S
42.175 30.412 m
42.175 23.225 L
S
27.775 30.412 m
27.775 23.225 L
S
13.375 30.412 m
13.375 23.225 L
S
70.975 15.975 m
70.975 8.787 l
S
56.575 15.975 m
56.575 8.787 L
S
42.175 15.975 m
42.175 8.787 L
S
27.775 15.975 m
27.775 8.787 L
S
13.375 15.975 m
13.375 8.787 L
S
63.762 8.787 m
63.762 1.6 L
S
49.362 8.787 m
49.362 1.6 L
S
34.962 8.787 m
34.962 1.6 L
S
20.562 8.787 m
20.562 1.6 L
S
6.162 8.787 m
6.162 1.6 l
S
63.762 23.225 m
63.762 16.037 L
S
49.362 23.225 m
49.362 16.037 L
S
34.962 23.225 m
34.962 16.037 L
S
20.562 23.225 m
20.562 16.037 L
S
6.162 23.225 m
6.162 16.037 l
S
63.762 37.6 m
63.762 30.412 L
S
49.362 37.6 m
49.362 30.412 L
S
20.562 37.6 m
20.562 30.412 L
S
6.162 37.6 m
6.162 30.412 l
S
63.762 51.975 m
63.762 44.787 L
S
49.362 51.975 m
49.362 44.787 L
S
34.962 51.975 m
34.962 44.787 L
S
20.562 51.975 m
20.562 44.787 L
S
6.162 51.975 m
6.162 44.787 l
S
63.762 66.412 m
63.762 59.225 L
S
49.362 66.412 m
49.362 59.225 L
S
34.962 66.412 m
34.962 59.225 L
S
20.562 66.412 m
20.562 59.225 L
S
6.162 66.412 m
6.162 59.225 l
S
63.762 80.849 m
63.762 73.662 L
S
49.362 80.849 m
49.362 73.662 L
S
34.962 80.849 m
34.962 73.662 L
S
20.562 80.849 m
20.562 73.662 L
S
6.162 80.849 m
6.162 73.662 l
S
34.962 37.6 m
34.962 30.412 L
S
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Checks)
(Checks) 4.8 4.8 35.1995 35.1995 [
(0 O 0 R 0 0.9 1 0 (Saturn Red) 0 x
 0 0.9 1 0 (Saturn Red) 0 X
) @
_ &
(0 O 0 R 0 0.25 1 0 (Orange Yellow) 0.8 x
 0 0.25 1 0 (Orange Yellow) 0.8 X
) @
(
%AI6_BeginPatternLayer
800 Ar
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
0 XR
16.1995 1 m
16.1995 8.6 L
8.6 8.6 L
8.6 1 L
16.1995 1 L
f
12.3995 4.8 m
F
1 8.6 m
1 16.1995 L
8.6 16.1995 L
8.6 8.6 L
1 8.6 L
f
4.8 12.3995 m
F
31.3995 1 m
31.3995 8.6 L
23.7995 8.6 L
23.7995 1 L
31.3995 1 L
f
27.5995 4.8 m
F
16.1995 8.6 m
16.1995 16.1995 L
23.7995 16.1995 L
23.7995 8.6 L
16.1995 8.6 L
f
19.9995 12.3995 m
F
31.3995 8.6 m
31.3995 16.1995 L
38.9995 16.1995 L
38.9995 8.6 L
31.3995 8.6 L
f
35.1995 12.3995 m
F
16.1995 16.1995 m
16.1995 23.7995 L
8.6 23.7995 L
8.6 16.1995 L
16.1995 16.1995 L
f
12.3995 19.9995 m
F
1 23.7995 m
1 31.3995 L
8.6 31.3995 L
8.6 23.7995 L
1 23.7995 L
f
4.8 27.5995 m
F
31.3995 16.1995 m
31.3995 23.7995 L
23.7995 23.7995 L
23.7995 16.1995 L
31.3995 16.1995 L
f
27.5995 19.9995 m
F
16.1995 23.7995 m
16.1995 31.3995 L
23.7995 31.3995 L
23.7995 23.7995 L
16.1995 23.7995 L
f
19.9995 27.5995 m
F
31.3995 23.7995 m
31.3995 31.3995 L
38.9995 31.3995 L
38.9995 23.7995 L
31.3995 23.7995 L
f
35.1995 27.5995 m
F
16.1995 31.3995 m
16.1995 38.9995 L
8.6 38.9995 L
8.6 31.3995 L
16.1995 31.3995 L
f
12.3995 35.1995 m
F
31.3995 31.3995 m
31.3995 38.9995 L
23.7995 38.9995 L
23.7995 31.3995 L
31.3995 31.3995 L
f
27.5995 35.1995 m
F
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Confetti)
(Confetti) 4.85 3.617 76.85 75.617 [
(0 O 0 R 1 g
 1 G
) @
_ &
(0 O 0 R 0 g
 0 G
) @
(
%AI6_BeginPatternLayer
800 Ar
0 J 0 j 0.3 w 4 M []0 d
%AI3_Note:
0 D
0 XR
10.6 64.867 m
7.85 62.867 l
S
9.1 8.617 m
6.85 6.867 l
S
78.1 68.617 m
74.85 67.867 l
S
76.85 56.867 m
74.35 55.117 l
S
79.6 51.617 m
76.6 51.617 l
S
76.35 44.117 m
73.6 45.867 l
S
78.6 35.867 m
76.6 34.367 l
S
76.1 23.867 m
73.35 26.117 l
S
78.1 12.867 m
73.85 13.617 l
S
68.35 14.617 m
66.1 12.867 l
S
76.6 30.617 m
73.6 30.617 l
S
62.85 58.117 m
60.956 60.941 l
S
32.85 59.617 m
31.196 62.181 l
S
47.891 64.061 m
49.744 66.742 l
S
72.814 2.769 m
73.928 5.729 l
S
67.976 2.633 m
67.35 5.909 l
S
61.85 27.617 m
59.956 30.441 l
S
53.504 56.053 m
51.85 58.617 l
S
52.762 1.779 m
52.876 4.776 l
S
45.391 5.311 m
47.244 7.992 l
S
37.062 3.375 m
35.639 5.43 l
S
55.165 34.828 m
57.518 37.491 l
S
20.795 3.242 m
22.12 5.193 l
S
14.097 4.747 m
15.008 8.965 l
S
9.736 1.91 m
8.073 4.225 l
S
31.891 5.573 m
32.005 8.571 l
S
12.1 70.367 m
15.6 68.867 l
S
9.35 54.867 m
9.6 58.117 l
S
12.85 31.867 m
14.35 28.117 l
S
10.1 37.367 m
12.35 41.117 l
S
34.1 71.117 m
31.85 68.617 l
S
38.35 71.117 m
41.6 68.367 l
S
55.1 71.117 m
58.35 69.117 l
S
57.35 65.117 m
55.35 61.867 l
S
64.35 66.367 m
69.35 68.617 l
S
71.85 62.867 m
69.35 61.117 l
S
23.6 70.867 m
23.6 67.867 l
S
20.6 65.867 m
17.35 65.367 l
S
24.85 61.367 m
25.35 58.117 l
S
25.85 65.867 m
29.35 66.617 l
S
14.1 54.117 m
16.85 56.117 l
S
12.35 11.617 m
12.6 15.617 l
S
12.1 19.867 m
14.35 22.367 l
S
26.1 9.867 m
23.6 13.367 l
S
34.6 47.117 m
32.1 45.367 l
S
62.6 41.867 m
59.85 43.367 l
S
31.6 35.617 m
27.85 36.367 l
S
36.35 26.117 m
34.35 24.617 l
S
33.85 14.117 m
31.1 16.367 l
S
37.1 9.867 m
35.1 11.117 l
S
34.35 20.867 m
31.35 20.867 l
S
44.6 56.617 m
42.1 54.867 l
S
47.35 51.367 m
44.35 51.367 l
S
44.1 43.867 m
41.35 45.617 l
S
43.35 33.117 m
42.6 30.617 l
S
43.85 23.617 m
41.1 25.867 l
S
44.35 15.617 m
42.35 16.867 l
S
67.823 31.1 m
64.823 31.1 l
S
27.1 32.617 m
29.6 30.867 l
S
31.85 55.117 m
34.85 55.117 l
S
19.6 40.867 m
22.1 39.117 l
S
16.85 35.617 m
19.85 35.617 l
S
20.1 28.117 m
22.85 29.867 l
S
52.1 42.617 m
54.484 44.178 l
S
52.437 50.146 m
54.821 48.325 l
S
59.572 54.133 m
59.35 51.117 l
S
50.185 10.055 m
53.234 9.928 l
S
51.187 15.896 m
53.571 14.075 l
S
58.322 19.883 m
59.445 16.823 l
S
53.1 32.117 m
50.6 30.367 l
S
52.85 24.617 m
49.6 25.617 l
S
61.85 9.117 m
59.1 10.867 l
S
69.35 34.617 m
66.6 36.367 l
S
67.1 23.617 m
65.1 22.117 l
S
24.435 46.055 m
27.484 45.928 l
S
25.437 51.896 m
27.821 50.075 l
S
62.6 47.117 m
65.321 46.575 l
S
19.85 19.867 m
20.35 16.617 l
S
21.85 21.867 m
25.35 22.617 l
S
37.6 62.867 m
41.6 62.117 l
S
38.323 42.1 m
38.823 38.6 l
S
69.35 52.617 m
66.85 53.867 l
S
14.85 62.117 m
18.1 59.367 l
S
9.6 46.117 m
7.1 44.367 l
S
20.6 51.617 m
18.6 50.117 l
S
46.141 70.811 m
47.994 73.492 l
S
69.391 40.561 m
71.244 43.242 l
S
38.641 49.311 m
39.35 52.117 l
S
25.141 16.811 m
25.85 19.617 l
S
36.6 32.867 m
34.6 31.367 l
S
6.1 68.617 m
2.85 67.867 l
S
4.85 56.867 m
2.35 55.117 l
S
7.6 51.617 m
4.6 51.617 l
S
6.6 35.867 m
4.6 34.367 l
S
6.1 12.867 m
1.85 13.617 l
S
4.6 30.617 m
1.6 30.617 l
S
72.814 74.769 m
73.928 77.729 l
S
67.976 74.633 m
67.35 77.909 l
S
52.762 73.779 m
52.876 76.776 l
S
37.062 75.375 m
35.639 77.43 l
S
20.795 75.242 m
22.12 77.193 l
S
9.736 73.91 m
8.073 76.225 l
S
10.1 23.617 m
6.35 24.367 l
S
73.217 18.276 m
71.323 21.1 l
S
28.823 39.6 m
29.505 42.389 l
S
49.6 38.617 m
47.6 37.117 l
S
60.323 73.6 m
62.323 76.6 l
S
60.323 1.6 m
62.323 4.6 l
S
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (DblLine1.2.outer)
(DblLine1.2.outer) 1 1.0003 39.2706 39.271 [
%AI3_Tile
(0 O 0 R 1 0.14 0.09 0 (\245DblLine1.2.color1) 0 x
 1 0.14 0.09 0 (\245DblLine1.2.color1) 0 X
) @
(
%AI6_BeginPatternLayer
800 Ar
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
0 XR
39.2708 26.6602 m
13.6111 26.6602 L
13.6111 1.0005 L
22.1751 1 L
22.1751 18.096 L
39.2708 18.096 L
39.2708 26.6602 L
f
1003.2397 w
39.2708 15.578 m
24.6928 15.578 L
24.6928 1 L
25.367 1 L
25.367 14.9038 L
39.2708 14.9038 L
39.2708 15.578 L
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (DblLine1.2.side)
(DblLine1.2.side) 1 1 39.2706 39.2706 [
%AI3_Tile
(0 O 0 R 1 0.14 0.09 0 (\245DblLine1.2.color1) 0 x
 1 0.14 0.09 0 (\245DblLine1.2.color1) 0 X
) @
(
%AI6_BeginPatternLayer
800 Ar
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
0 XR
39.2704 18.0958 m
39.2704 26.6598 L
1.0001 26.6598 L
1.0001 18.0958 L
39.2704 18.0958 L
f
1003.2397 w
39.2704 14.9037 m
39.2704 15.5776 L
1.0001 15.5776 L
1.0001 14.9037 L
39.2704 14.9037 L
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Diamonds)
(Diamonds) 7.0312 11.2349 43.2176 52.1757 [
(0 O 0 R 0.2 0 1 0 (Yellow Green) 0 x
 0.2 0 1 0 (Yellow Green) 0 X
) @
_ &
(0 O 0 R 0.75 0.9 0 0 (Violet Blue) 0 x
 0.75 0.9 0 0 (Violet Blue) 0 X
) @
(
%AI6_BeginPatternLayer
800 Ar
0 J 0 j 0.5 w 4 M []0 d
%AI3_Note:
0 D
0 XR
49.2489 11.2349 m
43.2176 21.4698 L
37.1864 11.2349 L
43.217 1 L
49.2489 11.2349 L
f
37.1864 11.2349 m
31.1551 21.4698 L
25.1244 11.2349 L
31.1551 1 L
37.1864 11.2349 L
f
25.1244 11.2349 m
19.0932 21.4698 L
13.0619 11.2349 L
19.0932 1 L
25.1244 11.2349 L
f
13.0619 11.2349 m
7.0312 21.4698 L
1 11.2349 L
7.0312 1 L
13.0619 11.2349 L
f
49.2489 31.7053 m
43.2176 41.9408 L
37.1864 31.7053 L
43.217 21.4698 L
49.2489 31.7053 L
f
37.1864 31.7053 m
31.1551 41.9408 L
25.1244 31.7053 L
31.1551 21.4698 L
37.1864 31.7053 L
f
25.1244 31.7053 m
19.0932 41.9408 L
13.0619 31.7053 L
19.0932 21.4698 L
25.1244 31.7053 L
f
13.0619 31.7053 m
7.0312 41.9408 L
1 31.7053 L
7.0312 21.4698 L
13.0619 31.7053 L
f
49.2489 52.1751 m
43.2176 62.4112 L
37.1864 52.1751 L
43.217 41.9408 L
49.2489 52.1751 L
f
37.1864 52.1751 m
31.1551 62.4112 L
25.1244 52.1751 L
31.1551 41.9408 L
37.1864 52.1751 L
f
25.1244 52.1751 m
19.0932 62.4112 L
13.0619 52.1751 L
19.0932 41.9408 L
25.1244 52.1751 L
f
13.0619 52.1751 m
7.0312 62.4112 L
1 52.1751 L
7.0312 41.9408 L
13.0619 52.1751 L
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Laurel.inner)
(Laurel.inner) 1 1 28.5392 28.5392 [
%AI3_Tile
(0 O 0 R 0 0.55 1 0.12 (\245Laurel.color2) 0 x
 0 0.55 1 0.12 (\245Laurel.color2) 0 X
) @
(
%AI6_BeginPatternLayer
800 Ar
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
0 XR
19.2768 15.3585 m
28.9144 15.3585 L
28.9144 14.2335 L
19.2768 14.2335 L
19.2768 15.3585 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0 0.55 1 0.3 (\245Laurel.color1) 0 x
 0 0.55 1 0.3 (\245Laurel.color1) 0 X
) @
(
%AI6_BeginPatternLayer
800 Ar
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
0 XR
14.7461 18.9624 m
13.0264 17.8486 11.3273 14.4193 11.3273 10.0362 c
11.3273 5.6547 12.9768 2.1518 14.744 1.1112 C
14.7443 1.1112 L
16.4707 2.1518 18.1679 5.6547 18.1679 10.0362 c
18.1679 14.4143 16.432 17.8633 14.7461 18.9624 C
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Laurel.outer)
(Laurel.outer) 1 1.3751 28.5393 28.9143 [
%AI3_Tile
(0 O 0 R 0 0.55 1 0.12 (\245Laurel.color2) 0 x
 0 0.55 1 0.12 (\245Laurel.color2) 0 X
) @
(
%AI6_BeginPatternLayer
800 Ar
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
0 XR
14.2395 10.6375 m
14.2395 1 L
15.3645 1 L
15.3645 10.6375 L
14.2395 10.6375 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0 0.55 1 0.3 (\245Laurel.color1) 0 x
 0 0.55 1 0.3 (\245Laurel.color1) 0 X
) @
(
%AI6_BeginPatternLayer
800 Ar
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
0 XR
10.5769 15.124 m
11.6906 16.8438 15.1198 18.5429 19.503 18.5429 c
23.8844 18.5429 27.3874 16.8935 28.428 15.1262 C
28.428 15.1259 L
27.3874 13.3995 23.8844 11.7023 19.503 11.7023 c
15.1249 11.7023 11.676 13.4382 10.5769 15.124 C
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Laurel.side)
(Laurel.side) 1.3972 1 28.9364 28.5392 [
%AI3_Tile
(0 O 0 R 0 0.55 1 0.12 (\245Laurel.color2) 0 x
 0 0.55 1 0.12 (\245Laurel.color2) 0 X
) @
(
%AI6_BeginPatternLayer
800 Ar
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
0 XR
29.1571 15.2998 m
1 15.2998 L
1 14.1748 L
29.1571 14.1748 L
29.1571 15.2998 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0 0.55 1 0.3 (\245Laurel.color1) 0 x
 0 0.55 1 0.3 (\245Laurel.color1) 0 X
) @
(
%AI6_BeginPatternLayer
800 Ar
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
0 XR
2.0183 27.4787 m
1.5899 25.4751 2.8132 21.8488 5.9125 18.7494 c
9.0107 15.6513 12.654 14.3407 14.6395 14.8545 C
14.6398 14.8547 L
15.1246 16.8113 13.8478 20.4883 10.7496 23.5865 c
7.6538 26.6824 3.9876 27.8936 2.0183 27.4787 C
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0 0.39 0.7 0.12 (\245Laurel.color3) 0 x
 0 0.39 0.7 0.12 (\245Laurel.color3) 0 X
) @
(
%AI6_BeginPatternLayer
800 Ar
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
0 XR
2.0183 2.0091 m
1.5899 4.0126 2.8132 7.6389 5.9125 10.7382 c
9.0107 13.8365 12.654 15.147 14.6395 14.6332 C
14.6398 14.633 L
15.1246 12.6765 13.8478 8.9993 10.7496 5.9011 c
7.6538 2.8054 3.9876 1.5941 2.0183 2.0091 C
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0 0.55 1 0.3 (\245Laurel.color1) 0 x
 0 0.55 1 0.3 (\245Laurel.color1) 0 X
) @
(
%AI6_BeginPatternLayer
800 Ar
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
0 XR
15.821 2.0091 m
15.3925 4.0126 16.6159 7.6389 19.7152 10.7382 c
22.8134 13.8365 26.4567 15.147 28.4422 14.6332 C
28.4424 14.633 L
28.9273 12.6765 27.6505 8.9993 24.5523 5.9011 c
21.4565 2.8054 17.7903 1.5941 15.821 2.0091 C
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0 0.39 0.7 0.12 (\245Laurel.color3) 0 x
 0 0.39 0.7 0.12 (\245Laurel.color3) 0 X
) @
(
%AI6_BeginPatternLayer
800 Ar
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
0 XR
15.821 27.4787 m
15.3925 25.4751 16.6159 21.8488 19.7152 18.7494 c
22.8134 15.6513 26.4567 14.3407 28.4422 14.8545 C
28.4424 14.8547 L
28.9273 16.8113 27.6505 20.4883 24.5523 23.5865 c
21.4565 26.6824 17.7903 27.8936 15.821 27.4787 C
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Polka Dots)
(Polka Dots) 3.88 3.88 32.68 32.68 [
(0 O 0 R 0.45 0.9 0 0 (Violet) 0 x
 0.45 0.9 0 0 (Violet) 0 X
) @
_ &
(0 O 0 R 0.45 0.9 0 0 (Violet) 0.8 x
 0.45 0.9 0 0 (Violet) 0.8 X
) @
(
%AI6_BeginPatternLayer
800 Ar
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
0 XR
32.68 1 m
34.27 1 35.56 2.29 35.56 3.88 c
35.56 5.471 34.27 6.76 32.68 6.76 c
31.089 6.76 29.8 5.471 29.8 3.88 c
29.8 2.29 31.089 1 32.68 1 c
f
18.28 1 m
19.87 1 21.16 2.29 21.16 3.88 c
21.16 5.471 19.87 6.76 18.28 6.76 c
16.689 6.76 15.4 5.471 15.4 3.88 c
15.4 2.29 16.689 1 18.28 1 c
f
3.88 1 m
5.47 1 6.76 2.29 6.76 3.88 c
6.76 5.471 5.47 6.76 3.88 6.76 c
2.29 6.76 1 5.471 1 3.88 c
1 2.29 2.29 1 3.88 1 c
f
32.68 15.4 m
34.27 15.4 35.56 16.69 35.56 18.28 c
35.56 19.871 34.27 21.16 32.68 21.16 c
31.089 21.16 29.8 19.871 29.8 18.28 c
29.8 16.69 31.089 15.4 32.68 15.4 c
f
18.28 15.4 m
19.87 15.4 21.16 16.69 21.16 18.28 c
21.16 19.871 19.87 21.16 18.28 21.16 c
16.689 21.16 15.4 19.871 15.4 18.28 c
15.4 16.69 16.689 15.4 18.28 15.4 c
f
3.88 15.4 m
5.47 15.4 6.76 16.69 6.76 18.28 c
6.76 19.871 5.47 21.16 3.88 21.16 c
2.29 21.16 1 19.871 1 18.28 c
1 16.69 2.29 15.4 3.88 15.4 c
f
32.68 29.8 m
34.27 29.8 35.56 31.09 35.56 32.68 c
35.56 34.271 34.27 35.56 32.68 35.56 c
31.089 35.56 29.8 34.271 29.8 32.68 c
29.8 31.09 31.089 29.8 32.68 29.8 c
f
18.28 29.8 m
19.87 29.8 21.16 31.09 21.16 32.68 c
21.16 34.271 19.87 35.56 18.28 35.56 c
16.689 35.56 15.4 34.271 15.4 32.68 c
15.4 31.09 16.689 29.8 18.28 29.8 c
f
3.88 29.8 m
5.47 29.8 6.76 31.09 6.76 32.68 c
6.76 34.271 5.47 35.56 3.88 35.56 c
2.29 35.56 1 34.271 1 32.68 c
1 31.09 2.29 29.8 3.88 29.8 c
f
11.08 8.2 m
12.67 8.2 13.96 9.49 13.96 11.08 c
13.96 12.671 12.67 13.96 11.08 13.96 c
9.489 13.96 8.2 12.671 8.2 11.08 c
8.2 9.49 9.489 8.2 11.08 8.2 c
f
25.48 8.2 m
27.07 8.2 28.36 9.49 28.36 11.08 c
28.36 12.671 27.07 13.96 25.48 13.96 c
23.889 13.96 22.6 12.671 22.6 11.08 c
22.6 9.49 23.889 8.2 25.48 8.2 c
f
11.08 22.6 m
12.67 22.6 13.96 23.89 13.96 25.48 c
13.96 27.071 12.67 28.36 11.08 28.36 c
9.489 28.36 8.2 27.071 8.2 25.48 c
8.2 23.89 9.489 22.6 11.08 22.6 c
f
25.48 22.6 m
27.07 22.6 28.36 23.89 28.36 25.48 c
28.36 27.071 27.07 28.36 25.48 28.36 c
23.889 28.36 22.6 27.071 22.6 25.48 c
22.6 23.89 23.889 22.6 25.48 22.6 c
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Random O's)
(Random O's) 4.365 3.849 51.13 57.85 [
(0 O 0 R 0 0.25 1 0 (Orange Yellow) 0.55 x
 0 0.25 1 0 (Orange Yellow) 0.55 X
) @
_ &
(0 O 0 R 0.4 0.7 1 0 (Rusty Brown) 0 x
 0.4 0.7 1 0 (Rusty Brown) 0 X
) @
(
%AI6_BeginPatternLayer
800 Ar
0 J 0 j 0.3 w 4 M []0 d
%AI3_Note:
0 D
0 XR
45.429 36.274 m
45.843 36.991 45.598 37.908 44.88 38.323 c
44.163 38.737 43.245 38.491 42.831 37.774 c
42.417 37.056 42.663 36.139 43.38 35.725 c
44.098 35.31 45.015 35.556 45.429 36.274 c
s
44.179 27.926 m
43.765 28.643 42.848 28.889 42.13 28.475 c
41.413 28.06 41.167 27.143 41.581 26.425 c
41.995 25.708 42.913 25.462 43.63 25.876 c
44.348 26.291 44.593 27.208 44.179 27.926 c
s
35.929 41.024 m
35.515 41.741 34.598 41.987 33.88 41.573 c
33.163 41.158 32.917 40.241 33.331 39.524 c
33.745 38.806 34.663 38.56 35.38 38.975 c
36.098 39.389 36.343 40.306 35.929 41.024 c
s
28.38 34.225 m
28.794 34.942 28.549 35.859 27.831 36.274 c
27.114 36.688 26.196 36.442 25.782 35.725 c
25.368 35.007 25.614 34.09 26.331 33.675 c
27.049 33.261 27.966 33.507 28.38 34.225 c
s
31.179 28.024 m
30.765 28.741 29.848 28.987 29.13 28.573 c
28.413 28.158 28.167 27.241 28.581 26.524 c
28.995 25.806 29.913 25.56 30.63 25.975 c
31.348 26.389 31.593 27.306 31.179 28.024 c
s
36.792 23.349 m
35.963 23.349 35.292 22.678 35.292 21.849 c
35.292 21.021 35.963 20.349 36.792 20.349 c
37.62 20.349 38.292 21.021 38.292 21.849 c
38.292 22.678 37.62 23.349 36.792 23.349 c
s
10.888 34.175 m
10.474 34.893 10.72 35.81 11.437 36.225 c
12.155 36.639 13.072 36.393 13.486 35.675 c
13.901 34.958 13.655 34.041 12.937 33.626 c
12.22 33.212 11.303 33.458 10.888 34.175 c
s
11.517 26.601 m
11.931 27.318 12.848 27.564 13.566 27.15 c
14.283 26.735 14.529 25.818 14.115 25.1 c
13.701 24.383 12.783 24.137 12.066 24.551 c
11.348 24.966 11.103 25.883 11.517 26.601 c
s
16.782 41.426 m
17.196 42.143 18.114 42.389 18.831 41.975 c
19.549 41.56 19.794 40.643 19.38 39.926 c
18.966 39.208 18.049 38.962 17.331 39.377 c
16.614 39.791 16.368 40.708 16.782 41.426 c
s
22.365 24.35 m
23.194 24.35 23.865 23.678 23.865 22.85 c
23.865 22.021 23.194 21.35 22.365 21.35 c
21.537 21.35 20.865 22.021 20.865 22.85 c
20.865 23.678 21.537 24.35 22.365 24.35 c
s
45.385 7.849 m
44.971 7.132 44.053 6.886 43.336 7.3 c
42.619 7.714 42.373 8.632 42.787 9.349 c
43.201 10.067 44.119 10.312 44.836 9.898 c
45.553 9.484 45.799 8.567 45.385 7.849 c
s
29.679 7.774 m
29.265 7.056 28.348 6.81 27.63 7.225 c
26.913 7.639 26.667 8.556 27.081 9.274 c
27.495 9.991 28.413 10.237 29.13 9.823 c
29.848 9.408 30.093 8.491 29.679 7.774 c
s
35.542 11.349 m
34.713 11.349 34.042 12.021 34.042 12.849 c
34.042 13.678 34.713 14.349 35.542 14.349 c
36.37 14.349 37.042 13.678 37.042 12.849 c
37.042 12.021 36.37 11.349 35.542 11.349 c
s
10.13 7.475 m
10.544 6.757 11.462 6.511 12.179 6.926 c
12.897 7.34 13.142 8.257 12.728 8.975 c
12.314 9.692 11.397 9.938 10.679 9.524 c
9.962 9.109 9.716 8.192 10.13 7.475 c
s
20.203 13.349 m
21.031 13.349 21.703 14.021 21.703 14.849 c
21.703 15.678 21.031 16.349 20.203 16.349 c
19.375 16.349 18.703 15.678 18.703 14.849 c
18.703 14.021 19.375 13.349 20.203 13.349 c
s
44.635 54.1 m
45.049 53.382 44.803 52.465 44.086 52.051 c
43.369 51.636 42.451 51.882 42.037 52.6 c
41.623 53.317 41.869 54.234 42.586 54.649 c
43.303 55.063 44.221 54.817 44.635 54.1 c
s
36.841 48.1 m
36.427 47.382 35.509 47.136 34.792 47.551 c
34.074 47.965 33.828 48.882 34.243 49.6 c
34.657 50.317 35.574 50.563 36.292 50.149 c
37.009 49.734 37.255 48.817 36.841 48.1 c
s
29.728 54.725 m
30.143 54.007 29.897 53.09 29.179 52.675 c
28.462 52.261 27.544 52.507 27.13 53.225 c
26.716 53.942 26.962 54.859 27.679 55.274 c
28.397 55.688 29.314 55.442 29.728 54.725 c
s
10.86 54.1 m
10.446 53.382 10.691 52.465 11.409 52.051 c
12.126 51.636 13.044 51.882 13.458 52.6 c
13.872 53.317 13.626 54.234 12.909 54.649 c
12.191 55.063 11.274 54.817 10.86 54.1 c
s
19.154 49.1 m
19.568 48.382 20.486 48.136 21.203 48.551 c
21.92 48.965 22.166 49.882 21.752 50.6 c
21.338 51.317 20.42 51.563 19.703 51.149 c
18.986 50.734 18.74 49.817 19.154 49.1 c
s
51.88 38.85 m
51.052 38.85 50.38 39.521 50.38 40.35 c
50.38 41.178 51.052 41.85 51.88 41.85 c
52.709 41.85 53.38 41.178 53.38 40.35 c
53.38 39.521 52.709 38.85 51.88 38.85 c
s
51.865 11.349 m
52.693 11.349 53.365 12.021 53.365 12.849 c
53.365 13.678 52.693 14.349 51.865 14.349 c
51.036 14.349 50.365 13.678 50.365 12.849 c
50.365 12.021 51.036 11.349 51.865 11.349 c
s
30.179 18.524 m
29.765 19.241 28.848 19.487 28.13 19.073 c
27.413 18.658 27.167 17.741 27.581 17.024 c
27.995 16.306 28.913 16.06 29.63 16.475 c
30.348 16.889 30.593 17.806 30.179 18.524 c
s
21.679 31.524 m
21.265 32.241 20.348 32.487 19.63 32.073 c
18.913 31.658 18.667 30.741 19.081 30.024 c
19.495 29.306 20.413 29.06 21.13 29.475 c
21.848 29.889 22.093 30.806 21.679 31.524 c
s
37.914 33.399 m
37.5 34.116 36.583 34.362 35.865 33.948 c
35.148 33.533 34.902 32.616 35.316 31.899 c
35.73 31.181 36.648 30.935 37.365 31.35 c
38.083 31.764 38.328 32.681 37.914 33.399 c
s
28.929 45.024 m
28.515 45.741 27.598 45.987 26.88 45.573 c
26.163 45.158 25.917 44.241 26.331 43.524 c
26.745 42.806 27.663 42.56 28.38 42.975 c
29.098 43.389 29.343 44.306 28.929 45.024 c
s
12.429 45.524 m
12.015 46.241 11.098 46.487 10.38 46.073 c
9.663 45.658 9.417 44.741 9.831 44.024 c
10.245 43.306 11.163 43.06 11.88 43.475 c
12.598 43.889 12.843 44.806 12.429 45.524 c
s
44.49 45.6 m
44.075 46.317 43.158 46.563 42.441 46.149 c
41.723 45.734 41.477 44.817 41.891 44.1 c
42.306 43.382 43.223 43.136 43.941 43.55 c
44.658 43.965 44.904 44.882 44.49 45.6 c
s
12.679 18.524 m
12.265 19.241 11.348 19.487 10.63 19.073 c
9.913 18.658 9.667 17.741 10.081 17.024 c
10.495 16.306 11.413 16.06 12.13 16.475 c
12.848 16.889 13.093 17.806 12.679 18.524 c
s
21.179 5.774 m
20.765 6.491 19.848 6.737 19.13 6.323 c
18.413 5.908 18.167 4.991 18.581 4.274 c
18.995 3.557 19.913 3.311 20.63 3.725 c
21.348 4.139 21.593 5.056 21.179 5.774 c
s
38.929 5.274 m
38.515 5.991 37.598 6.237 36.88 5.823 c
36.163 5.408 35.917 4.491 36.331 3.774 c
36.745 3.057 37.663 2.811 38.38 3.225 c
39.098 3.639 39.343 4.556 38.929 5.274 c
s
43.865 18.1 m
44.694 18.1 45.365 17.429 45.365 16.6 c
45.365 15.772 44.694 15.1 43.865 15.1 c
43.037 15.1 42.365 15.772 42.365 16.6 c
42.365 17.429 43.037 18.1 43.865 18.1 c
s
51.13 4.6 m
50.302 4.6 49.63 3.928 49.63 3.1 c
49.63 2.272 50.302 1.6 51.13 1.6 c
51.959 1.6 52.63 2.272 52.63 3.1 c
52.63 3.928 51.959 4.6 51.13 4.6 c
s
52.163 31.649 m
51.748 32.366 50.831 32.612 50.114 32.198 c
49.396 31.783 49.15 30.866 49.565 30.149 c
49.979 29.431 50.896 29.185 51.614 29.6 c
52.331 30.014 52.577 30.931 52.163 31.649 c
s
51.85 51.35 m
51.021 51.35 50.35 50.678 50.35 49.85 c
50.35 49.021 51.021 48.35 51.85 48.35 c
52.678 48.35 53.35 49.021 53.35 49.85 c
53.35 50.678 52.678 51.35 51.85 51.35 c
s
49.85 23.1 m
50.679 23.1 51.35 22.428 51.35 21.6 c
51.35 20.771 50.679 20.1 49.85 20.1 c
49.022 20.1 48.35 20.771 48.35 21.6 c
48.35 22.428 49.022 23.1 49.85 23.1 c
s
5.13 38.85 m
4.302 38.85 3.63 39.521 3.63 40.35 c
3.63 41.178 4.302 41.85 5.13 41.85 c
5.959 41.85 6.63 41.178 6.63 40.35 c
6.63 39.521 5.959 38.85 5.13 38.85 c
s
5.115 11.349 m
5.943 11.349 6.615 12.021 6.615 12.849 c
6.615 13.678 5.943 14.349 5.115 14.349 c
4.286 14.349 3.615 13.678 3.615 12.849 c
3.615 12.021 4.286 11.349 5.115 11.349 c
s
4.38 4.6 m
3.552 4.6 2.88 3.928 2.88 3.1 c
2.88 2.272 3.552 1.6 4.38 1.6 c
5.209 1.6 5.88 2.272 5.88 3.1 c
5.88 3.928 5.209 4.6 4.38 4.6 c
s
5.413 31.649 m
4.998 32.366 4.081 32.612 3.364 32.198 c
2.646 31.783 2.4 30.866 2.815 30.149 c
3.229 29.431 4.146 29.185 4.864 29.6 c
5.581 30.014 5.827 30.931 5.413 31.649 c
s
5.1 51.35 m
4.271 51.35 3.6 50.678 3.6 49.85 c
3.6 49.021 4.271 48.35 5.1 48.35 c
5.928 48.35 6.6 49.021 6.6 49.85 c
6.6 50.678 5.928 51.35 5.1 51.35 c
s
3.1 23.1 m
3.929 23.1 4.6 22.428 4.6 21.6 c
4.6 20.771 3.929 20.1 3.1 20.1 c
2.272 20.1 1.6 20.771 1.6 21.6 c
1.6 22.428 2.272 23.1 3.1 23.1 c
s
21.194 59.775 m
20.78 60.492 19.863 60.738 19.145 60.324 c
18.428 59.909 18.182 58.992 18.596 58.275 c
19.01 57.558 19.928 57.312 20.645 57.726 c
21.363 58.14 21.608 59.057 21.194 59.775 c
s
38.944 59.275 m
38.53 59.992 37.613 60.238 36.895 59.824 c
36.178 59.409 35.932 58.492 36.346 57.775 c
36.76 57.058 37.678 56.812 38.395 57.226 c
39.113 57.64 39.358 58.557 38.944 59.275 c
s
51.145 58.601 m
50.317 58.601 49.645 57.929 49.645 57.101 c
49.645 56.273 50.317 55.601 51.145 55.601 c
51.974 55.601 52.645 56.273 52.645 57.101 c
52.645 57.929 51.974 58.601 51.145 58.601 c
s
4.395 58.601 m
3.567 58.601 2.895 57.929 2.895 57.101 c
2.895 56.273 3.567 55.601 4.395 55.601 c
5.224 55.601 5.895 56.273 5.895 57.101 c
5.895 57.929 5.224 58.601 4.395 58.601 c
s
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Rope.side)
(Rope.side) 1 4.6 60.9998 33.3999 [
%AI3_Tile
(0 O 0 R 0 0 0 1 (\245Rope.color1) 0 x
 0 0 0 1 (\245Rope.color1) 0 X
) @
(
%AI6_BeginPatternLayer
800 Ar
1 J 1 j 0.6 w 4 M []0 d
%AI3_Note:
0 D
0 XR
24.9999 7 m
15.6521 4.663 8.125 8.6981 1 14.1408 C
S
36.9999 7 m
22.3477 3.337 12.168 15.3276 1 23.859 C
S
48.9999 7 m
29.3464 2.0866 17.7386 25.3332 1 30.6213 C
S
1 30.9999 m
24.9999 36.9999 36.9999 1 60.9998 7 C
S
13 30.9999 m
32.6534 35.9133 44.2611 12.6667 60.9998 7.3786 C
S
24.9999 30.9999 m
39.652 34.6629 49.8317 22.6722 60.9998 14.1408 C
S
36.9999 30.9999 m
46.3476 33.3369 53.8749 29.3018 60.9998 23.859 C
S
48.9999 30.9999 m
53.3464 32.0865 57.2978 31.7908 60.9998 30.6213 C
S
13 7 m
8.6535 5.9134 4.7019 6.2091 1 7.3786 C
S
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Stars)
(Stars) 7.255 4 69.639 87.766 [
(0 O 0 R 1 0.9 0.1 0 (Dark Blue) 0 x
 1 0.9 0.1 0 (Dark Blue) 0 X
) @
_ &
(0 O 0 R 0 0.25 1 0 (Orange Yellow) 0 x
 0 0.25 1 0 (Orange Yellow) 0 X
) @
(
%AI6_BeginPatternLayer
800 Ar
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
0 XR
38.447 4 m
F
34.58 2.744 m
28.324 7.289 L
36.058 7.289 L
38.447 14.643 L
40.836 7.288 L
48.57 7.288 L
42.313 2.743 L
34.58 2.744 L
f
69.639 4 m
F
72.005 2.743 m
65.772 2.744 L
59.516 7.289 L
67.25 7.289 L
69.639 14.643 L
72.028 7.288 L
72.005 2.743 L
f
7.255 45.883 m
F
7.255 56.526 m
9.644 49.171 L
17.378 49.171 L
11.121 44.625 L
13.51 37.271 L
7.255 41.816 L
1 37.272 L
7.255 56.526 L
f
38.447 45.883 m
F
32.191 37.272 m
34.58 44.626 L
28.324 49.172 L
36.058 49.172 L
38.447 56.526 L
40.836 49.171 L
48.57 49.171 L
42.313 44.625 L
44.702 37.271 L
38.447 41.816 L
32.191 37.272 L
f
69.639 45.883 m
F
75.894 37.271 m
69.639 41.816 L
63.383 37.272 L
65.772 44.626 L
59.516 49.172 L
67.25 49.172 L
69.639 56.526 L
75.894 37.271 L
f
7.255 87.766 m
F
1.005 91.055 m
17.378 91.054 L
11.121 86.508 L
13.51 79.154 L
7.255 83.699 L
1 79.155 L
1.005 91.055 L
f
38.447 87.766 m
F
48.57 91.054 m
42.313 86.508 L
44.702 79.154 L
38.447 83.699 L
32.191 79.155 L
34.58 86.509 L
28.324 91.055 L
48.57 91.054 L
f
22.851 66.824 m
F
16.595 58.213 m
18.984 65.567 L
12.728 70.113 L
20.462 70.113 L
22.851 77.467 L
25.24 70.112 L
32.974 70.112 L
26.717 65.566 L
29.106 58.212 L
22.851 62.757 L
16.595 58.213 L
f
54.046 66.824 m
F
47.79 58.213 m
50.179 65.567 L
43.923 70.113 L
51.657 70.113 L
54.046 77.467 L
56.435 70.112 L
64.169 70.112 L
57.912 65.566 L
60.301 58.212 L
54.046 62.757 L
47.79 58.213 L
f
54.046 24.941 m
F
47.79 16.33 m
50.179 23.684 L
43.923 28.23 L
51.657 28.23 L
54.046 35.584 L
56.435 28.229 L
64.169 28.229 L
57.912 23.683 L
60.301 16.329 L
54.046 20.874 L
47.79 16.33 L
f
22.851 24.941 m
F
16.595 16.33 m
18.984 23.684 L
12.728 28.23 L
20.462 28.23 L
22.851 35.584 L
25.24 28.229 L
32.974 28.229 L
26.717 23.683 L
29.106 16.329 L
22.851 20.874 L
16.595 16.33 L
f
7.255 4 m
F
4.889 2.743 m
11.121 2.744 L
17.377 7.289 L
9.643 7.289 L
7.255 14.643 L
4.866 7.288 L
4.889 2.743 L
f
69.639 87.766 m
F
75.889 91.055 m
59.515 91.054 L
65.772 86.508 L
63.383 79.154 L
69.639 83.699 L
75.894 79.155 L
75.889 91.055 L
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Stripes-transparent)
(Stripes-transparent) 8.45 4.6001 80.45 76.6001 [
%AI3_Tile
(0 O 0 R 0 0.9 1 0 (Saturn Red) 0 x
 0 0.9 1 0 (Saturn Red) 0 X
) @
(
%AI6_BeginPatternLayer
800 Ar
0 J 0 j 3.6 w 4 M []0 d
%AI3_Note:
0 D
0 XR
8.2 8.2 m
80.7 8.2 L
S
8.2 22.6001 m
80.7 22.6001 L
S
8.2 37.0002 m
80.7 37.0002 L
S
8.2 51.4 m
80.7 51.4 L
S
8.2 65.8001 m
80.7 65.8001 L
S
8.2 15.4 m
80.7 15.4 L
S
8.2 29.8001 m
80.7 29.8001 L
S
8.2 44.2 m
80.7 44.2 L
S
8.2 58.6001 m
80.7 58.6001 L
S
8.2 73.0002 m
80.7 73.0002 L
S
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
8 Bn
%AI5_BeginGradient: (Black & White)
(Black & White) 0 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 50 100 %_BS
%_0 0 50 100 Bs
1 0 50 0 %_BS
%_1 0 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Green & Blue)
(Green & Blue) 0 2 Bd
[
<
99999A9A9B9B9B9C9C9D9D9D9E9E9F9F9FA0A0A1A1A1A2A2A3A3A3A4A4A5A5A5A6A6A7A7A7A8A8A9
A9A9AAAAABABABACACADADADAEAEAFAFAFB0B0B1B1B1B2B2B3B3B3B4B4B5B5B5B6B6B7B7B7B8B8B9
B9B9BABABBBBBBBCBCBDBDBDBEBEBFBFBFC0C0C1C1C1C2C2C3C3C3C4C4C5C5C5C6C6C7C7C7C8C8C9
C9C9CACACBCBCBCCCCCDCDCDCECECFCFCFD0D0D1D1D1D2D2D3D3D3D4D4D5D5D5D6D6D7D7D7D8D8D9
D9D9DADADBDBDBDCDCDDDDDDDEDEDFDFDFE0E0E1E1E1E2E2E3E3E3E4E4E5E5E5E6E6E7E7E7E8E8E9
E9E9EAEAEBEBEBECECEDEDEDEEEEEFEFEFF0F0F1F1F1F2F2F3F3F3F4F4F5F5F5F6F6F7F7F7F8F8F9
F9F9FAFAFBFBFBFCFCFDFDFDFEFEFFFF
>
<
000102020304050506070808090A0B0B0C0D0E0E0F101111121314141516171718191A1A1B1C1D1D
1E1F20202122232324252626272829292A2B2C2C2D2E2F2F303132323334353536373838393A3B3B
3C3D3E3E3F404141424344444546474748494A4A4B4C4D4D4E4F5050515253535455565657585959
5A5B5C5C5D5E5F5F606162626364656566676868696A6B6B6C6D6E6E6F7071717273747475767777
78797A7A7B7C7D7D7E7F80808182838384858686878889898A8B8C8C8D8E8F8F9091929293949595
96979898999A9B9B9C9D9E9E9FA0A1A1A2A3A4A4A5A6A7A7A8A9AAAAABACADADAEAFB0B0B1B2B3B3
B4B5B6B6B7B8B9B9BABBBCBCBDBEBFBF
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0
1 %_Br
[
1 0.75 0 0 1 50 100 %_BS
%_1 0.75 0 0 1 50 100 Bs
0.6 0 1 0 1 50 0 %_BS
%_0.6 0 1 0 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Pink, Yellow, Green)
(Pink, Yellow, Green) 0 3 Bd
[
<
00000000000000000000000000000000000000010101010101010101010101010101010101010101
01010101010202020202020202020202020202020202020202020203030303030303030303030303
03030303030303030404040404040404040404040404040404040404050505050505050505050505
05050505050505060606060606060606060606060606060606060707070707070707070707070707
07070707080808080808080808080808080808080809090909090909090909090909090909090A0A
0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C
0C0C0C0C0C0C0C0C0D0D0D0D
>
<
050506060606070708080809090A0A0A0B0B0C0C0D0D0E0E0F0F1010111112121313141415151617
17181819191A1A1B1C1C1D1D1E1F1F202021222223232425252626272828292A2A2B2C2C2D2D2E2F
2F3031313233333435353637373839393A3B3B3C3D3E3E3F4040414242434445454647474849494A
4B4C4C4D4E4F4F505151525354545556575758595A5A5B5C5C5D5E5F5F6061626363646566666768
69696A6B6C6C6D6E6F707071727373747576777778797A7B7B7C7D7E7F7F80818283838485868787
88898A8B8B8C8D8E8F8F9091929394949596979898999A9B9C9D9D9E9FA0A1A2A2A3A4A5A6A7A7A8
A9AAABACADADAEAFB0B1B2B3
>
<
CCCCCBCBCBCACACAC9C9C8C8C7C7C6C6C5C5C4C4C3C2C2C1C1C0C0BFBEBEBDBDBCBBBBBAB9B9B8B7
B7B6B5B5B4B3B3B2B1B1B0AFAFAEADADACABAAAAA9A8A8A7A6A5A5A4A3A2A2A1A0A09F9E9D9C9C9B
9A999998979696959493929291908F8E8E8D8C8B8A8A8988878686858483828181807F7E7D7C7C7B
7A7978777676757473727171706F6E6D6C6B6A6A69686766656463636261605F5E5D5C5B5B5A5958
5756555453525151504F4E4D4C4B4A49484746464544434241403F3E3D3C3B3A3938383736353433
3231302F2E2D2C2B2A29282726252423222221201F1E1D1C1B1A191817161514131211100F0E0D0C
0B0A09080706050403020100
>
0
1 %_Br
<
737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5B5A59585756555453525150504F4E
4D4C4B4A4949484746454443434241403F3E3E3D3C3B3A3A393837363635343333323130302F2E2D
2D2C2B2A2A29282827262525242323222121201F1F1E1D1D1C1C1B1A1A1918181717161615141413
1312121111100F0F0E0E0D0D0C0C0C0B0B0A0A090908080807070606060505050404040303030202
020201010101010000000000
>
<
00000000000000000000000001010101010101010101010101010101010101010101010102020202
02020202020202020202020202020202020202020202030303030303030303030303030303030303
03030303030303030303030303040404040404040404040404040404040404040404040404040404
04040404040404040404050505050505050505050505050505050505050505050505050505050505
050505050505050505050505
>
<
BFBFBFC0C0C0C0C0C0C0C0C0C1C1C1C1C1C1C1C1C1C2C2C2C2C2C2C2C2C2C2C3C3C3C3C3C3C3C3C3
C3C4C4C4C4C4C4C4C4C4C4C5C5C5C5C5C5C5C5C5C5C5C6C6C6C6C6C6C6C6C6C6C6C6C7C7C7C7C7C7
C7C7C7C7C7C7C8C8C8C8C8C8C8C8C8C8C8C8C8C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9CACACACACACA
CACACACACACACACACACACBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCC
>
0
1 %_Br
[
0.05 0.7 0 0 1 50 100 %_BS
%_0.05 0.7 0 0 1 50 100 Bs
0 0.02 0.8 0 1 57 36 %_BS
%_0 0.02 0.8 0 1 57 36 Bs
0.45 0 0.75 0 1 37 0 %_BS
%_0.45 0 0.75 0 1 37 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Purple, Red & Yellow)
(Purple, Red & Yellow) 0 3 Bd
[
0
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A
>
<
CCCCCCCDCDCDCDCDCECECECECECFCFCFCFD0D0D0D0D0D1D1D1D1D1D2D2D2D2D2D3D3D3D3D3D4D4D4
D4D5D5D5D5D5D6D6D6D6D6D7D7D7D7D7D8D8D8D8D8D9D9D9D9DADADADADADBDBDBDBDBDCDCDCDCDC
DDDDDDDDDDDEDEDEDEDFDFDFDFDFE0E0E0E0E0E1E1E1E1E1E2E2E2E2E2E3E3E3E3E4E4E4E4E4E5E5
E5E5E5E6E6E6E6E6E7E7E7E7E7E8E8E8E8E9E9E9E9E9EAEAEAEAEAEBEBEBEBEBECECECECECEDEDED
EDEEEEEEEEEEEFEFEFEFEFF0F0F0F0F0F1F1F1F1F1F2F2F2F2F3F3F3F3F3F4F4F4F4F4F5F5F5F5F5
F6F6F6F6F6F7F7F7F7F8F8F8F8F8F9F9F9F9F9FAFAFAFAFAFBFBFBFBFBFCFCFCFCFDFDFDFDFDFEFE
FEFEFEFFFFFF
>
0
1 %_Br
<
E6E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBE
BDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99989796
9594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E
6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A49484746
4544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E
1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100
>
<
E6E6E6E6E6E6E6E6E6E7E7E7E7E7E7E7E7E7E8E8E8E8E8E8E8E8E8E9E9E9E9E9E9E9E9E9EAEAEAEA
EAEAEAEAEAEBEBEBEBEBEBEBEBEBECECECECECECECECECEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEE
EEEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F3F3F3
F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7
F7F7F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFCFC
FCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFFFFFFFFFF
>
<
00010203040405060708090A0B0C0C0D0E0F10111213141415161718191A1B1C1D1D1E1F20212223
242525262728292A2B2C2D2D2E2F30313233343535363738393A3B3C3D3D3E3F4041424344454546
4748494A4B4C4D4E4E4F50515253545556565758595A5B5C5D5E5E5F60616263646566666768696A
6B6C6D6E6E6F70717273747576767778797A7B7C7D7E7E7F80818283848586878788898A8B8C8D8E
8F8F90919293949596979798999A9B9C9D9E9F9FA0A1A2A3A4A5A6A7A7A8A9AAABACADAEAFAFB0B1
B2B3B4B5B6B7B8B8B9BABBBCBDBEBFC0C0C1C2C3C4C5C6C7C8C8C9CACBCC
>
0
1 %_Br
[
0 0.04 1 0 1 50 100 %_BS
%_0 0.04 1 0 1 50 100 Bs
0 1 0.8 0 1 50 50 %_BS
%_0 1 0.8 0 1 50 50 Bs
0.9 0.9 0 0 1 50 0 %_BS
%_0.9 0.9 0 0 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Rainbow)
(Rainbow) 0 6 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
1
0
0
1 %_Br
1
<
0708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E
2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F50515253545556
5758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E
7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6
A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE
CFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6
F7F8F9FAFBFCFDFEFF
>
0
0
1 %_Br
1
<
00000000000000000000000000000000000001010101010101010101010101010101010101010101
01010101010101010101010101010202020202020202020202020202020202020202020202020202
02020202020202020202030303030303030303030303030303030303030303030303030303030303
03030303030304040404040404040404040404040404040404040404040404040404040404040404
04040505050505050505050505050505050505050505050505050505050505050505050505050606
06060606060606060606060606060606060606060606060606060606060606060607070707070707
07070707070707070707070707070707
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0
1 %_Br
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
0
1
0
1 %_Br
0
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
1
0
1 %_Br
[
0 1 0 0 1 50 100 %_BS
%_0 1 0 0 1 50 100 Bs
1 1 0 0 1 50 80 %_BS
%_1 1 0 0 1 50 80 Bs
1 0.0279 0 0 1 50 60 %_BS
%_1 0.0279 0 0 1 50 60 Bs
1 0 1 0 1 50 40 %_BS
%_1 0 1 0 1 50 40 Bs
0 0 1 0 1 50 20 %_BS
%_0 0 1 0 1 50 20 Bs
0 1 1 0 1 50 0 %_BS
%_0 1 1 0 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Steel Bar)
(Steel Bar) 0 3 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
0 %_Br
[
0 0 50 100 %_BS
%_0 0 50 100 Bs
1 0 50 70 %_BS
%_1 0 50 70 Bs
0 0 50 0 %_BS
%_0 0 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Yellow & Orange Radial)
(Yellow & Orange Radial) 1 2 Bd
[
0
<
0001010203040506060708090A0B0C0C0D0E0F10111213131415161718191A1B1C1D1D1E1F202122
232425262728292A2B2B2C2D2E2F303132333435363738393A3B3C3D3E3E3F404142434445464748
494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60606162636465666768696A6B6C6D6E6F
707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C
>
<
FFFFFFFFFEFEFEFEFEFEFEFDFDFDFDFDFDFCFCFCFCFCFCFBFBFBFBFBFBFAFAFAFAFAFAF9F9F9F9F9
F9F8F8F8F8F8F8F7F7F7F7F7F7F6F6F6F6F6F6F5F5F5F5F5F5F4F4F4F4F4F3F3F3F3F3F3F2F2F2F2
F2F2F1F1F1F1F1F0F0F0F0F0F0EFEFEFEFEFEFEEEEEEEEEEEDEDEDEDEDEDECECECECECEBEBEBEBEB
EBEAEAEAEAEAE9E9E9E9E9E9E8E8E8E8E8E8E7E7E7E7E7E6E6E6E6E6E6
>
0
1 %_Br
[
0 0 1 0 1 52 19 %_BS
%_0 0 1 0 1 52 19 Bs
0 0.55 0.9 0 1 50 100 %_BS
%_0 0.55 0.9 0 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Yellow & Purple Radial)
(Yellow & Purple Radial) 1 2 Bd
[
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
1415161718191A1B1C1D1E1F1F202122232425262728292A2A2B2C2D2E2F30313233343536363738
393A3B3C3D3E3F40414142434445464748494A4B4C4D4D4E4F50515253545556575858595A5B5C5D
5E5F60616263646465666768696A6B6C6D6E6F6F707172737475767778797A7B7B7C7D7E7F808182
83848586868788898A8B8C8D8E8F90919292939495969798999A9B9C9D9D9E9FA0A1A2A3A4A5A6A7
A8A9A9AAABACADAEAFB0B1B2B3B4B4B5B6B7B8B9BABBBCBDBEBFC0C0C1C2C3C4C5C6C7C8C9CACBCB
CCCDCECFD0D1D2D3D4D5D6D7D7D8D9DADBDCDDDEDFE0E1E2E2E3E4E5E6E7E8E9EAEBECEDEEEEEFF0
F1F2F3F4F5F6F7F8F9F9FAFBFCFDFEFF
>
<
ABAAAAA9A8A8A7A6A5A5A4A3A3A2A1A1A09F9F9E9D9D9C9B9B9A9999989797969595949393929191
908F8F8E8D8D8C8B8B8A8989888787868585848383828181807F7F7E7D7D7C7B7B7A797978777776
7575747373727171706F6F6E6D6D6C6B6B6A6969686767666564646362626160605F5E5E5D5C5C5B
5A5A5958585756565554545352525150504F4E4E4D4C4C4B4A4A4948484746464544444342424140
403F3E3E3D3C3C3B3A3A3938383736363534343332323130302F2E2E2D2C2C2B2A2A292828272626
25242423222121201F1F1E1D1D1C1B1B1A1919181717161515141313121111100F0F0E0D0D0C0B0B
0A090908070706050504030302010100
>
0
1 %_Br
[
0 0.08 0.67 0 1 50 14 %_BS
%_0 0.08 0.67 0 1 50 14 Bs
1 1 0 0 1 50 100 %_BS
%_1 1 0 0 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
1 1 1 1 ([Registration]) 0 Xs
([Registration]) Pc
1 g
(K=0) Pc
0 g
(K=100) Pc
0 0 0 0 k
(C=0 M=0 Y=0 K=0) Pc
0.75 g
(K=25) Pc
0.5 g
(K=50) Pc
0.25 g
(K=75) Pc
0 g
(K=100) Pc
Bb
2 (Black & White) -7885.5 8587.5 0 0 1 0 0 1 0 0 Bg
0 BB
(Black & White) Pc
0.25 0 0 0 k
(C=25 M=0 Y=0 K=0) Pc
0.5 0 0 0 k
(C=50 M=0 Y=0 K=0) Pc
0.75 0 0 0 k
(C=75 M=0 Y=0 K=0) Pc
1 0 0 0 k
(C=100 M=0 Y=0 K=0) Pc
0.25 0.25 0 0 k
(C=25 M=25 Y=0 K=0) Pc
0.5 0.5 0 0 k
(C=50 M=50 Y=0 K=0) Pc
0.75 0.75 0 0 k
(C=75 M=75 Y=0 K=0) Pc
1 1 0 0 k
(C=100 M=100 Y=0 K=0) Pc
Bb
2 (Pink, Yellow, Green) -7885.5 8587.5 0 0 1 0 0 1 0 0 Bg
0 BB
(Pink, Yellow, Green) Pc
0 0.25 0 0 k
(C=0 M=25 Y=0 K=0) Pc
0 0.5 0 0 k
(C=0 M=50 Y=0 K=0) Pc
0 0.75 0 0 k
(C=0 M=75 Y=0 K=0) Pc
0 1 0 0 k
(C=0 M=100 Y=0 K=0) Pc
0 0.25 0.25 0 k
(C=0 M=25 Y=25 K=0) Pc
0 0.5 0.5 0 k
(C=0 M=50 Y=50 K=0) Pc
0 0.75 0.75 0 k
(C=0 M=75 Y=75 K=0) Pc
0 1 1 0 k
(C=0 M=100 Y=100 K=0) Pc
Bb
0 0 0 0 Bh
2 (Yellow & Purple Radial) -7885.5 8587.5 0 0 1 0 0 1 0 0 Bg
0 BB
(Yellow & Purple Radial) Pc
0 0 0.25 0 k
(C=0 M=0 Y=25 K=0) Pc
0 0 0.5 0 k
(C=0 M=0 Y=50 K=0) Pc
0 0 0.75 0 k
(C=0 M=0 Y=75 K=0) Pc
0 0 1 0 k
(C=0 M=0 Y=100 K=0) Pc
0.25 0 0.25 0 k
(C=25 M=0 Y=25 K=0) Pc
0.5 0 0.5 0 k
(C=50 M=0 Y=50 K=0) Pc
0.75 0 0.75 0 k
(C=75 M=0 Y=75 K=0) Pc
1 0 1 0 k
(C=100 M=0 Y=100 K=0) Pc
Bb
2 (Rainbow) -7885.5 8587.5 0 0 1 0 0 1 0 0 Bg
0 BB
(Rainbow) Pc
0.25 0.125 0 0 k
(C=25 M=13 Y=0 K=0) Pc
0.5 0.25 0 0 k
(C=50 M=25 Y=0 K=0) Pc
0.75 0.375 0 0 k
(C=75 M=38 Y=0 K=0) Pc
1 0.5 0 0 k
(C=100 M=50 Y=0 K=0) Pc
0.125 0.25 0 0 k
(C=13 M=25 Y=0 K=0) Pc
0.25 0.5 0 0 k
(C=25 M=50 Y=0 K=0) Pc
0.375 0.75 0 0 k
(C=38 M=75 Y=0 K=0) Pc
0.5 1 0 0 k
(C=50 M=100 Y=0 K=0) Pc
Bb
2 (Steel Bar) -7885.5 8587.5 0 0 1 0 0 1 0 0 Bg
0 BB
(Steel Bar) Pc
0 0.25 0.125 0 k
(C=0 M=25 Y=13 K=0) Pc
0 0.5 0.25 0 k
(C=0 M=50 Y=25 K=0) Pc
0 0.75 0.375 0 k
(C=0 M=75 Y=38 K=0) Pc
0 1 0.5 0 k
(C=0 M=100 Y=50 K=0) Pc
0 0.125 0.25 0 k
(C=0 M=13 Y=25 K=0) Pc
0 0.25 0.5 0 k
(C=0 M=25 Y=50 K=0) Pc
0 0.375 0.75 0 k
(C=0 M=38 Y=75 K=0) Pc
0 0.5 1 0 k
(C=0 M=50 Y=100 K=0) Pc
Bb
2 (Purple, Red & Yellow) -7885.5 8587.5 0 0 1 0 0 1 0 0 Bg
0 BB
(Purple, Red & Yellow) Pc
0.125 0 0.25 0 k
(C=13 M=0 Y=25 K=0) Pc
0.25 0 0.5 0 k
(C=25 M=0 Y=50 K=0) Pc
0.375 0 0.75 0 k
(C=38 M=0 Y=75 K=0) Pc
0.5 0 1 0 k
(C=50 M=0 Y=100 K=0) Pc
0.25 0 0.125 0 k
(C=25 M=0 Y=13 K=0) Pc
0.5 0 0.25 0 k
(C=50 M=0 Y=25 K=0) Pc
0.75 0 0.375 0 k
(C=75 M=0 Y=38 K=0) Pc
1 0 0.5 0 k
(C=100 M=0 Y=50 K=0) Pc
Bb
2 (Green & Blue) -7885.5 8587.5 0 0 1 0 0 1 0 0 Bg
0 BB
(Green & Blue) Pc
0.25 0.125 0.125 0 k
(C=25 M=13 Y=13 K=0) Pc
0.5 0.25 0.25 0 k
(C=50 M=25 Y=25 K=0) Pc
0.75 0.375 0.375 0 k
(C=75 M=38 Y=38 K=0) Pc
1 0.5 0.5 0 k
(C=100 M=50 Y=50 K=0) Pc
0.25 0.25 0.125 0 k
(C=25 M=25 Y=13 K=0) Pc
0.5 0.5 0.25 0 k
(C=50 M=50 Y=25 K=0) Pc
0.75 0.75 0.375 0 k
(C=75 M=75 Y=38 K=0) Pc
1 1 0.5 0 k
(C=100 M=100 Y=50 K=0) Pc
Bb
0 0 0 0 Bh
2 (Yellow & Orange Radial) -7885.5 8587.5 0 0 1 0 0 1 0 0 Bg
0 BB
(Yellow & Orange Radial) Pc
0.125 0.25 0.125 0 k
(C=13 M=25 Y=13 K=0) Pc
0.25 0.5 0.25 0 k
(C=25 M=50 Y=25 K=0) Pc
0.375 0.75 0.375 0 k
(C=38 M=75 Y=38 K=0) Pc
0.5 1 0.5 0 k
(C=50 M=100 Y=50 K=0) Pc
0.125 0.25 0.25 0 k
(C=13 M=25 Y=25 K=0) Pc
0.25 0.5 0.5 0 k
(C=25 M=50 Y=50 K=0) Pc
0.375 0.75 0.75 0 k
(C=38 M=75 Y=75 K=0) Pc
0.5 1 1 0 k
(C=50 M=100 Y=100 K=0) Pc
0 0 0 0 k
(C=0 M=0 Y=0 K=0) Pc
0.125 0.125 0.25 0 k
(C=13 M=13 Y=25 K=0) Pc
0.25 0.25 0.5 0 k
(C=25 M=25 Y=50 K=0) Pc
0.375 0.375 0.75 0 k
(C=38 M=38 Y=75 K=0) Pc
0.5 0.5 1 0 k
(C=50 M=50 Y=100 K=0) Pc
0.25 0.125 0.25 0 k
(C=25 M=13 Y=25 K=0) Pc
0.5 0.25 0.5 0 k
(C=50 M=25 Y=50 K=0) Pc
0.75 0.375 0.75 0 k
(C=75 M=38 Y=75 K=0) Pc
1 0.5 1 0 k
(C=100 M=50 Y=100 K=0) Pc
1 0.9 0.1 0 (Dark Blue) 0 x
(Dark Blue) Pc
0 0.25 1 0 (Orange Yellow) 0 x
(Orange Yellow) Pc
0.4 0.7 1 0 (Rusty Brown) 0 x
(Rusty Brown) Pc
0 0.9 1 0 (Saturn Red) 0 x
(Saturn Red) Pc
0.45 0.9 0 0 (Violet) 0 x
(Violet) Pc
0.75 0.9 0 0 (Violet Blue) 0 x
(Violet Blue) Pc
0.2 0 1 0 (Yellow Green) 0 x
(Yellow Green) Pc
0.75 0.75 0.375 0 (\245Arrow1.2.color1) 0 x
(\245Arrow1.2.color1) Pc
1 0.14 0.09 0 (\245DblLine1.2.color1) 0 x
(\245DblLine1.2.color1) Pc
0 0.55 1 0.3 (\245Laurel.color1) 0 x
(\245Laurel.color1) Pc
0 0.55 1 0.12 (\245Laurel.color2) 0 x
(\245Laurel.color2) Pc
0 0.39 0.7 0.12 (\245Laurel.color3) 0 x
(\245Laurel.color3) Pc
0 0 0 1 (\245Rope.color1) 0 x
(\245Rope.color1) Pc
(Scales) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Scales) Pc
(Arrow1.2.out/in) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Arrow1.2.out/in) Pc
(Arrow1.2.side) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Arrow1.2.side) Pc
(Bricks) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Bricks) Pc
(Checks) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Checks) Pc
(Confetti) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Confetti) Pc
(DblLine1.2.outer) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(DblLine1.2.outer) Pc
(DblLine1.2.side) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(DblLine1.2.side) Pc
(Diamonds) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Diamonds) Pc
(Laurel.inner) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Laurel.inner) Pc
(Laurel.outer) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Laurel.outer) Pc
(Laurel.side) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Laurel.side) Pc
(Polka Dots) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Polka Dots) Pc
(Random O's) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Random O's) Pc
(Rope.side) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Rope.side) Pc
(Stars) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Stars) Pc
(Stripes-transparent) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Stripes-transparent) Pc
PB
%AI5_EndPalette
%AI5_Begin_NonPrinting
Np
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (Art Brush Tool)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (Art Brush Tool)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Undo New Calligraphic Brush) (Calligraphic Brush Tool)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool)
%AI5_End_NonPrinting--
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 100 Lb
(Layer 1) Ln
0 A
0 R
0 G
300 Ar
1 J 1 j 1 w 4 M []0 d
%AI3_Note:
0 D
0 XR
138.0244 290.0117 m
138.0244 292.5732 l
S
201.8711 290.0117 m
201.8711 292.5732 l
S
265.7222 290.0117 m
265.7222 292.5732 l
S
329.5684 290.0117 m
329.5684 292.5732 l
S
393.416 290.0117 m
393.416 292.5732 l
S
457.2666 290.0117 m
457.2666 292.5732 l
S
521.1133 290.0117 m
521.1133 292.5732 l
S
150.7915 290.0117 m
150.7915 291.5488 l
S
163.5625 290.0117 m
163.5625 291.5488 l
S
176.3335 290.0117 m
176.3335 291.5488 l
S
189.1001 290.0117 m
189.1001 291.5488 l
S
214.6421 290.0117 m
214.6421 291.5488 l
S
227.4131 290.0117 m
227.4131 291.5488 l
S
240.1802 290.0117 m
240.1802 291.5488 l
S
252.9512 290.0117 m
252.9512 291.5488 l
S
278.4893 290.0117 m
278.4893 291.5488 l
S
291.2598 290.0117 m
291.2598 291.5488 l
S
304.0313 290.0117 m
304.0313 291.5488 l
S
316.7979 290.0117 m
316.7979 291.5488 l
S
342.3398 290.0117 m
342.3398 291.5488 l
S
355.1064 290.0117 m
355.1064 291.5488 l
S
367.8779 290.0117 m
367.8779 291.5488 l
S
380.6484 290.0117 m
380.6484 291.5488 l
S
406.1875 290.0117 m
406.1875 291.5488 l
S
418.958 290.0117 m
418.958 291.5488 l
S
431.7285 290.0117 m
431.7285 291.5488 l
S
444.4961 290.0117 m
444.4961 291.5488 l
S
470.0371 290.0117 m
470.0371 291.5488 l
S
482.8047 290.0117 m
482.8047 291.5488 l
S
495.5762 290.0117 m
495.5762 291.5488 l
S
508.3467 290.0117 m
508.3467 291.5488 l
S
125.2534 290.0117 m
125.2534 291.5488 l
S
117.3721 290.0117 m
527.2246 290.0117 l
S
117.3721 297.8936 m
119.9336 297.8936 l
S
117.3721 360.6133 m
119.9336 360.6133 l
S
117.3721 423.3374 m
119.9336 423.3374 l
S
117.3721 486.0566 m
119.9336 486.0566 l
S
117.3721 548.7808 m
119.9336 548.7808 l
S
117.3721 611.5005 m
119.9336 611.5005 l
S
117.3721 674.2202 m
119.9336 674.2202 l
S
117.3721 310.4395 m
118.9087 310.4395 l
S
117.3721 322.9805 m
118.9087 322.9805 l
S
117.3721 335.5264 m
118.9087 335.5264 l
S
117.3721 348.0723 m
118.9087 348.0723 l
S
117.3721 373.1582 m
118.9087 373.1582 l
S
117.3721 385.7051 m
118.9087 385.7051 l
S
117.3721 398.2461 m
118.9087 398.2461 l
S
117.3721 410.7915 m
118.9087 410.7915 l
S
117.3721 435.8789 m
118.9087 435.8789 l
S
117.3721 448.4243 m
118.9087 448.4243 l
S
117.3721 460.9697 m
118.9087 460.9697 l
S
117.3721 473.5112 m
118.9087 473.5112 l
S
117.3721 498.6025 m
118.9087 498.6025 l
S
117.3721 511.1479 m
118.9087 511.1479 l
S
117.3721 523.6895 m
118.9087 523.6895 l
S
117.3721 536.2354 m
118.9087 536.2354 l
S
117.3721 561.3223 m
118.9087 561.3223 l
S
117.3721 573.8677 m
118.9087 573.8677 l
S
117.3721 586.4136 m
118.9087 586.4136 l
S
117.3721 598.9546 m
118.9087 598.9546 l
S
117.3721 624.0459 m
118.9087 624.0459 l
S
117.3721 636.5874 m
118.9087 636.5874 l
S
117.3721 649.1333 m
118.9087 649.1333 l
S
117.3721 661.6787 m
118.9087 661.6787 l
S
117.3721 686.7656 m
118.9087 686.7656 l
S
1 A
117.3721 699.3115 m
118.9087 699.3115 l
S
117.3721 290.0117 m
117.3721 699.8647 l
S
138.0244 697.3027 m
138.0244 699.8647 l
S
201.8711 697.3027 m
201.8711 699.8647 l
S
265.7222 697.3027 m
265.7222 699.8647 l
S
329.5684 697.3027 m
329.5684 699.8647 l
S
393.416 697.3027 m
393.416 699.8647 l
S
457.2666 697.3027 m
457.2666 699.8647 l
S
521.1133 697.3027 m
521.1133 699.8647 l
S
150.7915 698.3276 m
150.7915 699.8647 l
S
163.5625 698.3276 m
163.5625 699.8647 l
S
176.3335 698.3276 m
176.3335 699.8647 l
S
189.1001 698.3276 m
189.1001 699.8647 l
S
214.6421 698.3276 m
214.6421 699.8647 l
S
227.4131 698.3276 m
227.4131 699.8647 l
S
240.1802 698.3276 m
240.1802 699.8647 l
S
252.9512 698.3276 m
252.9512 699.8647 l
S
278.4893 698.3276 m
278.4893 699.8647 l
S
291.2598 698.3276 m
291.2598 699.8647 l
S
304.0313 698.3276 m
304.0313 699.8647 l
S
316.7979 698.3276 m
316.7979 699.8647 l
S
342.3398 698.3276 m
342.3398 699.8647 l
S
355.1064 698.3276 m
355.1064 699.8647 l
S
367.8779 698.3276 m
367.8779 699.8647 l
S
380.6484 698.3276 m
380.6484 699.8647 l
S
406.1875 698.3276 m
406.1875 699.8647 l
S
418.958 698.3276 m
418.958 699.8647 l
S
431.7285 698.3276 m
431.7285 699.8647 l
S
444.4961 698.3276 m
444.4961 699.8647 l
S
470.0371 698.3276 m
470.0371 699.8647 l
S
482.8047 698.3276 m
482.8047 699.8647 l
S
495.5762 698.3276 m
495.5762 699.8647 l
S
508.3467 698.3276 m
508.3467 699.8647 l
S
125.2534 698.3276 m
125.2534 699.8647 l
S
117.3721 699.8647 m
527.2246 699.8647 l
S
0 A
524.6621 297.8936 m
527.2246 297.8936 l
S
524.6621 360.6133 m
527.2246 360.6133 l
S
524.6621 423.3374 m
527.2246 423.3374 l
S
524.6621 486.0566 m
527.2246 486.0566 l
S
524.6621 548.7808 m
527.2246 548.7808 l
S
524.6621 611.5005 m
527.2246 611.5005 l
S
524.6621 674.2202 m
527.2246 674.2202 l
S
525.6875 310.4395 m
527.2246 310.4395 l
S
525.6875 322.9805 m
527.2246 322.9805 l
S
525.6875 335.5264 m
527.2246 335.5264 l
S
525.6875 348.0723 m
527.2246 348.0723 l
S
525.6875 373.1582 m
527.2246 373.1582 l
S
525.6875 385.7051 m
527.2246 385.7051 l
S
525.6875 398.2461 m
527.2246 398.2461 l
S
525.6875 410.7915 m
527.2246 410.7915 l
S
525.6875 435.8789 m
527.2246 435.8789 l
S
525.6875 448.4243 m
527.2246 448.4243 l
S
525.6875 460.9697 m
527.2246 460.9697 l
S
525.6875 473.5112 m
527.2246 473.5112 l
S
525.6875 498.6025 m
527.2246 498.6025 l
S
525.6875 511.1479 m
527.2246 511.1479 l
S
525.6875 523.6895 m
527.2246 523.6895 l
S
525.6875 536.2354 m
527.2246 536.2354 l
S
525.6875 561.3223 m
527.2246 561.3223 l
S
525.6875 573.8677 m
527.2246 573.8677 l
S
525.6875 586.4136 m
527.2246 586.4136 l
S
525.6875 598.9546 m
527.2246 598.9546 l
S
525.6875 624.0459 m
527.2246 624.0459 l
S
525.6875 636.5874 m
527.2246 636.5874 l
S
525.6875 649.1333 m
527.2246 649.1333 l
S
525.6875 661.6787 m
527.2246 661.6787 l
S
525.6875 686.7656 m
527.2246 686.7656 l
S
1 A
525.6875 699.3115 m
527.2246 699.3115 l
S
527.2246 290.0117 m
527.2246 699.8647 l
S
0 A
q
1 A
0 J 0 j
117.3721 290.0117 m
527.2246 290.0117 l
527.2246 699.8647 l
117.3721 699.8647 l
117.3721 290.0117 l
h
W
n
0 A
2 To
1 0 0 1 -7885.5 8587.5 38 Tp
0 Tv
800 Ar
282.0996 538.3379 m
282.0996 538.3379 l
276.3169 536.4565 l
275.5093 536.1943 l
274.1895 535.7681 l
272.874 535.3457 l
272.2266 535.1367 l
271.5542 534.9238 l
270.2344 534.5015 l
268.9189 534.0791 l
268.1035 533.8213 l
267.5991 533.6611 l
266.2837 533.2393 l
264.9639 532.8213 l
263.9517 532.5015 l
263.644 532.4072 l
262.3286 531.9893 l
261.0088 531.5752 l
259.7627 531.1855 l
259.6934 531.1611 l
258.3735 530.7471 l
257.0581 530.3374 l
255.7383 529.9277 l
255.5415 529.8662 l
254.4185 529.5176 l
253.103 529.1079 l
251.7832 528.7021 l
251.291 528.5464 l
250.4673 528.292 l
249.1475 527.8862 l
247.8281 527.4805 l
247.0083 527.2305 l
246.5122 527.0791 l
245.1924 526.6772 l
243.877 526.2715 l
242.6885 525.9111 l
242.5571 525.8701 l
241.2417 525.4727 l
239.9219 525.0708 l
238.6021 524.6733 l
238.3398 524.5952 l
237.2866 524.2754 l
235.9668 523.8779 l
234.6514 523.4844 l
233.9585 523.2754 l
233.3315 523.0869 l
232.0117 522.6934 l
230.6963 522.3003 l
229.5444 521.9561 l
229.3765 521.9067 l
N
TP
3 Tr
%_ 0 50 XQ
/_Times-Roman 12 11.6191 -4.9629 Tf
0 Ts
100 100 Tz
0 Tt
%_0 0 100 100 Xu
%AI55J_GlyphSubst: GlyphSubstNone 
0 TA
%_ 0 XL
0 TY
0 TV
18 0 Xb
XB
0 0 5 TC
100 100 200 TW
25 TG
0 0 0 Ti
0 Ta
0 1 2 2 99 Th
0 Tq
240 Tg
0 0 Tl
0 Tc
0 Tw
(\r) TX 
TO
300 Ar
282.0996 538.3379 m
283.4155 538.7681 l
284.3989 539.0918 l
284.7354 539.2021 l
286.0508 539.6367 l
287.3706 540.0713 l
288.3872 540.4116 l
288.6904 540.5098 l
290.0059 540.9482 l
291.3257 541.3872 l
292.3462 541.7271 l
292.6411 541.8257 l
293.9609 542.2681 l
295.2808 542.7109 l
296.2725 543.0469 l
296.5962 543.1572 l
297.916 543.6001 l
299.2314 544.0469 l
300.1621 544.3623 l
300.5513 544.4976 l
301.8672 544.9443 l
303.1865 545.3955 l
304.0229 545.6821 l
304.5063 545.8462 l
305.8223 546.3013 l
307.1416 546.7559 l
307.8467 547.002 l
308.457 547.2109 l
309.7773 547.6699 l
311.0967 548.1289 l
311.6426 548.3174 l
312.4121 548.5879 l
313.7324 549.0513 l
315.0479 549.5142 l
315.4004 549.6372 l
316.3682 549.9775 l
317.6836 550.4448 l
319.0029 550.9121 l
319.126 550.9531 l
320.3232 551.3794 l
321.6387 551.8506 l
322.8184 552.2725 l
322.958 552.3218 l
324.2734 552.793 l
325.5938 553.2686 l
326.4785 553.5923 l
326.9131 553.748 l
327.625 554.0625 L
328.2285 554.2236 L
329.5479 554.7031 l
330.1064 554.9082 l
330.8643 555.1865 l
332.1836 555.6704 l
333.5 556.1538 l
333.7002 556.2275 l
334.8193 556.6416 l
336.1387 557.1294 l
337.2578 557.5435 l
337.4551 557.6172 l
338.7744 558.1089 l
340.0898 558.6006 l
340.7861 558.8633 l
341.4102 559.0967 l
342.7295 559.5928 l
344.0449 560.0928 l
344.2793 560.1787 l
345.3643 560.5928 l
346.6807 561.0967 l
347.7383 561.4985 l
348 561.6011 l
349.3154 562.105 l
350.6357 562.6133 l
351.1602 562.8184 l
351.9551 563.1255 l
353.2705 563.6338 l
354.5537 564.1338 l
354.5898 564.1499 l
355.9063 564.6665 l
357.2256 565.1831 l
357.9102 565.4536 l
358.5449 565.7036 l
359.8613 566.2241 l
361.1807 566.7485 l
361.2344 566.769 l
362.4971 567.2773 l
363.8164 567.8018 l
364.5254 568.0889 l
365.1357 568.335 l
366.4521 568.8677 l
367.7715 569.4043 l
367.7793 569.4087 l
369.0869 569.9414 l
370.4063 570.4785 l
371.001 570.7241 l
371.7227 571.0234 l
373.042 571.5645 l
374.1895 572.0439 l
374.3613 572.1138 l
375.1875 572.5 L
375.6768 572.6626 L
376.9971 573.2163 l
377.3457 573.3594 l
378.3125 573.7695 l
379.6318 574.3267 l
380.4648 574.6792 l
380.9521 574.8843 l
382.2676 575.4458 l
383.5508 575.9951 l
383.5879 576.0112 l
384.9033 576.5811 l
386.2227 577.1509 l
386.6035 577.3145 l
387.5391 577.7202 l
388.8584 578.2983 l
389.6211 578.6343 l
390.1777 578.876 l
391.4941 579.458 l
392.6084 579.9502 l
392.8135 580.0439 l
394.1289 580.6304 l
395.4482 581.2207 l
395.5557 581.2695 l
396.7686 581.8149 l
398.084 582.4092 l
398.4727 582.5854 l
399.4043 583.0117 l
400.7188 583.6143 l
401.3545 583.9053 l
402.0391 584.2207 l
403.3545 584.8311 l
404.2031 585.2246 l
404.6738 585.4419 l
405.9941 586.061 l
407.0146 586.5405 l
407.3096 586.6797 l
408.6289 587.3027 l
409.7939 587.8604 l
409.9453 587.9341 l
411.2646 588.5649 l
412.54 589.1758 l
412.585 589.2002 l
413.9004 589.8354 l
415.2197 590.479 l
415.248 590.4956 l
416.5352 591.1265 l
417.8555 591.7783 l
417.9248 591.811 l
419.1709 592.4341 l
420.4902 593.0938 l
420.1875 592.9375 L
420.8232 593.3496 L
421.8105 593.7578 l
423.126 594.4258 l
423.1709 594.4507 l
424.4453 595.0981 l
425.7451 595.7661 l
425.7607 595.7744 l
427.0811 596.459 l
428.2813 597.0859 l
428.4014 597.1475 l
429.7168 597.8359 l
430.7861 598.4014 l
431.0361 598.5366 l
432.3516 599.2378 l
433.2568 599.7212 l
433.6719 599.9468 l
434.9873 600.6597 l
435.6914 601.041 l
436.3066 601.377 l
437.627 602.1025 l
438.0898 602.3564 l
438.9424 602.832 l
440.2617 603.5654 l
440.4551 603.6763 l
441.5771 604.3076 l
442.7861 604.9917 l
442.8975 605.0576 l
444.2168 605.8115 l
445.082 606.3115 l
445.5332 606.5742 l
446.8525 607.3403 l
447.3438 607.6274 l
448.168 608.1152 l
449.4883 608.8979 l
449.5693 608.9473 l
450.8076 609.689 l
451.7617 610.2666 l
452.123 610.4839 l
453.4434 611.2915 l
453.918 611.5825 l
454.7578 612.103 l
456.041 612.9023 l
456.0781 612.9229 l
457.3936 613.7544 l
458.1309 614.2178 l
458.7139 614.5908 l
460.0332 615.439 l
460.1846 615.5376 l
461.3486 616.2959 l
462.2012 616.8574 l
462.4375 617 L
462.6689 617.1646 L
463.9844 618.0415 l
464.1855 618.1729 l
465.3037 618.9268 l
466.1318 619.4927 l
466.623 619.8247 l
467.9395 620.7344 l
468.0459 620.8081 l
469.2588 621.6567 l
469.9268 622.1279 l
470.5742 622.5913 l
471.7715 623.4473 l
471.8945 623.5337 l
473.21 624.4927 l
473.5781 624.7632 l
474.5293 625.4683 l
475.3535 626.083 l
475.8496 626.4517 l
477.0918 627.3984 l
477.165 627.4561 l
478.4854 628.4727 l
478.7969 628.7183 l
479.8008 629.5049 l
480.4688 630.0337 l
481.1201 630.5586 l
482.1035 631.354 l
482.4395 631.6284 l
483.7021 632.6733 l
483.7559 632.7188 l
485.0752 633.8252 l
485.2676 633.9893 l
486.3906 634.9561 l
486.7969 635.3086 l
487.71 636.1123 l
488.2891 636.6245 l
489.0264 637.2881 l
489.752 637.9443 l
490.3457 638.4932 l
491.1738 639.2637 l
491.665 639.7227 l
492.5625 640.5796 l
492.9814 640.9854 l
493.9199 641.8994 l
494.3008 642.2764 l
495.2393 643.2148 l
495.6172 643.604 l
496.5225 644.5342 l
496.9365 644.9648 l
497.7725 645.8501 l
498.2559 646.3706 l
498.6875 646.8125 L
498.9854 647.1699 L
499.5723 647.8213 l
500.166 648.4897 l
500.8916 649.3174 l
501.3096 649.8052 l
502.207 650.8706 l
502.416 651.125 l
503.4893 652.4404 l
503.5273 652.4858 l
504.5313 653.7603 l
504.8418 654.1704 l
505.5352 655.0801 l
506.1621 655.9287 l
506.502 656.3955 l
507.4365 657.7153 l
507.4814 657.7808 l
508.335 659.0313 l
508.7979 659.7363 l
509.1943 660.3506 l
510.0225 661.6665 l
510.1172 661.8179 l
510.8184 662.9863 l
511.4326 664.0596 l
511.5723 664.3057 l
512.2979 665.6216 l
512.752 666.4902 l
512.9814 666.9414 l
513.6338 668.2568 l
514.0723 669.1831 l
514.252 669.5762 l
514.8311 670.896 l
515.3789 672.2119 l
515.3877 672.2363 l
515.8877 673.5317 l
516.3633 674.8472 l
516.707 675.8594 l
516.8057 676.167 l
517.2119 677.4824 l
517.5811 678.8022 l
517.916 680.1221 l
518.0234 680.5811 l
518.2158 681.4375 l
518.4785 682.7573 l
518.707 684.0732 l
518.9004 685.3926 l
519.0605 686.7124 l
519.1836 688.0283 l
519.2734 689.3477 l
519.3271 690.6631 l
519.3428 691.9834 l
519.3428 297.8936 l
519.3271 299.2139 l
519.2734 300.5293 l
519.1836 301.8486 l
519.0605 303.1641 l
518.9004 304.4844 l
518.707 305.8037 l
518.4785 307.1191 l
518.2158 308.4395 l
518.0234 309.2959 l
517.916 309.7549 l
517.5811 311.0742 l
517.2119 312.3936 l
516.8057 313.71 l
516.707 314.0176 l
516.3633 315.0293 l
515.8877 316.3457 l
515.3877 317.6396 l
515.3789 317.665 l
514.8311 318.9805 l
514.252 320.3008 l
514.0723 320.6934 l
513.6338 321.6201 l
512.9814 322.9355 l
512.752 323.3867 l
512.2979 324.2559 l
511.5723 325.5703 l
511.4326 325.8164 l
510.8184 326.8906 l
510.1172 328.0586 l
510.0225 328.21 l
509.1943 329.5264 l
508.7979 330.1406 l
N
177.9727 507.2051 m
178.895 507.4595 l
179.2925 507.5703 l
180.6123 507.9346 l
181.9277 508.2998 l
183.2476 508.6641 l
183.6572 508.7793 l
184.563 509.0293 l
185.8828 509.3979 l
187.2026 509.7627 l
188.3872 510.0947 l
188.5181 510.1318 l
189.8379 510.5005 l
191.1538 510.8691 l
192.4731 511.2422 l
193.0879 511.4146 l
193.7891 511.6113 l
195.1089 511.9844 l
196.4282 512.3569 l
197.7441 512.73 l
197.7563 512.73 l
199.0635 513.103 l
200.3794 513.4761 l
201.6992 513.853 l
202.3916 514.0498 l
203.0186 514.2261 l
204.3345 514.603 l
205.6543 514.9805 l
206.9697 515.3613 l
206.9985 515.3696 l
208.2896 515.7383 l
209.6094 516.1196 l
210.9248 516.5005 l
211.5723 516.6851 l
212.2446 516.8818 l
213.5601 517.2632 l
214.8799 517.644 l
216.1138 518.0049 l
216.1958 518.0293 l
217.5151 518.4146 l
218.835 518.7998 l
220.1504 519.1855 l
220.6221 519.3203 l
221.4702 519.5703 l
222.7861 519.96 l
224.1055 520.3452 l
225.0977 520.6401 l
225.4253 520.7344 l
226.7412 521.124 l
228.061 521.5171 l
229.3765 521.9067 l
N
177.9727 507.2051 m
176.6572 506.8447 l
175.3374 506.48 l
174.0996 506.1396 l
174.022 506.1191 l
172.7021 505.7583 l
171.3862 505.3979 l
170.0669 505.0371 l
169.2759 504.8242 l
168.7471 504.6807 l
167.4312 504.3198 l
166.1118 503.9634 l
164.7959 503.6069 l
164.4189 503.5044 l
163.4761 503.25 l
162.1563 502.8936 l
160.8408 502.5371 l
159.5337 502.1885 l
159.521 502.1846 l
158.2056 501.832 l
156.8857 501.4756 l
155.5703 501.123 l
154.6152 500.8691 l
154.2505 500.7705 l
152.9307 500.418 l
151.6152 500.0698 l
150.2954 499.7173 l
149.6685 499.5532 l
148.98 499.3691 l
147.6602 499.0205 l
146.3403 498.6719 l
145.0249 498.3237 l
144.6885 498.2334 l
143.7051 497.9756 l
142.3896 497.627 l
141.0698 497.2827 l
139.7539 496.9346 l
139.6763 496.9141 l
138.4341 496.6353 l
137.1143 496.3237 l
135.7988 495.9795 l
134.6392 495.5981 l
134.6392 494.2783 l
135.7988 493.8975 l
137.1143 493.5532 l
138.4341 493.2417 l
139.6763 492.9629 l
139.7539 492.9424 l
141.0698 492.5942 l
142.3896 492.25 l
143.7051 491.9014 l
N
143.7051 491.9014 m
144.6885 491.6431 l
145.0249 491.5532 l
146.3403 491.2046 l
147.6602 490.8564 l
148.98 490.5078 l
149.6685 490.3232 l
150.2954 490.1597 l
151.6152 489.8071 l
152.9307 489.4585 l
154.2505 489.1064 l
154.6152 489.0078 l
155.5703 488.7539 l
156.8857 488.4014 l
158.2056 488.0449 l
159.521 487.6924 l
159.5337 487.688 l
160.8408 487.3398 l
162.1563 486.9834 l
163.4761 486.6265 l
164.4189 486.3726 l
164.7959 486.27 l
166.1118 485.9136 l
167.4312 485.5566 l
168.7471 485.1963 l
169.2759 485.0527 l
170.0669 484.8398 l
171.3862 484.479 l
172.7021 484.1182 l
174.022 483.7578 l
174.0996 483.7373 l
175.3374 483.397 l
176.6572 483.0322 l
177.9727 482.6714 l
178.895 482.4175 l
179.2925 482.3066 l
180.6123 481.9419 l
181.9277 481.5771 l
183.2476 481.2124 l
183.6572 481.0977 l
184.563 480.8477 l
185.8828 480.479 l
187.2026 480.1143 l
188.3872 479.7822 l
188.5181 479.7451 l
189.8379 479.3765 l
191.1538 479.0073 l
192.4731 478.6343 l
193.0879 478.4624 l
193.7891 478.2656 l
195.1089 477.8926 l
N
195.1089 477.8926 m
196.4282 477.5195 l
197.7441 477.1465 l
197.7563 477.1465 l
199.0635 476.7739 l
200.3794 476.4009 l
201.6992 476.0239 l
202.3916 475.8271 l
203.0186 475.6509 l
204.3345 475.2739 l
205.6543 474.8965 l
206.9697 474.5156 l
206.9985 474.5073 l
208.2896 474.1382 l
209.6094 473.7573 l
210.9248 473.376 l
211.5723 473.1914 l
212.2446 472.9951 l
213.5601 472.6138 l
214.8799 472.2324 l
216.1138 471.8721 l
216.1958 471.8472 l
217.5151 471.4619 l
218.835 471.0767 l
220.1504 470.6914 l
220.6221 470.5562 l
221.4702 470.3062 l
222.7861 469.917 l
224.1055 469.5317 l
225.0977 469.2368 l
225.4253 469.1421 l
226.7412 468.7529 l
228.061 468.3594 l
229.3765 467.9702 l
229.5444 467.9209 l
230.6963 467.5767 l
232.0117 467.1831 l
233.3315 466.7896 l
233.9585 466.6011 l
234.6514 466.3921 l
235.9668 465.9985 l
237.2866 465.6011 l
238.3398 465.2813 l
238.6021 465.2036 l
239.9219 464.8062 l
241.2417 464.4043 l
242.5571 464.0068 l
242.6885 463.9658 l
243.877 463.605 l
245.1924 463.1992 l
246.5122 462.7979 l
N
246.5122 462.7979 m
247.0083 462.646 l
247.8281 462.396 l
249.1475 461.9902 l
250.4673 461.5845 l
251.291 461.3306 l
251.7832 461.1748 l
253.103 460.769 l
254.4185 460.3594 l
255.5415 460.0107 l
255.7383 459.9492 l
257.0581 459.5396 l
258.3735 459.1294 l
259.6934 458.7158 l
259.7627 458.6909 l
261.0088 458.3018 l
262.3286 457.8877 l
263.644 457.4697 l
263.9517 457.3755 l
264.9639 457.0557 l
266.2837 456.6377 l
267.5991 456.2153 l
268.1035 456.0557 l
268.9189 455.7974 l
270.2344 455.3755 l
271.5542 454.9531 l
272.2266 454.7402 l
272.874 454.5313 l
274.1895 454.1089 l
275.5093 453.6826 l
276.3169 453.4204 l
276.8252 453.2563 l
278.145 452.8301 l
279.4604 452.3999 l
280.3745 452.1006 l
280.7803 451.9697 l
282.0996 451.5391 l
283.4155 451.1089 l
284.3989 450.7852 l
284.7354 450.6743 l
286.0508 450.2397 l
287.3706 449.8057 l
288.3872 449.4653 l
288.6904 449.3667 l
290.0059 448.9282 l
291.3257 448.4897 l
292.3462 448.1499 l
292.6411 448.0513 l
293.9609 447.6084 l
295.2808 447.166 l
296.2725 446.8301 l
N
296.2725 446.8301 m
296.5962 446.7192 l
297.916 446.2764 l
299.2314 445.8301 l
300.1621 445.5142 l
300.5513 445.3789 l
301.8672 444.9321 l
303.1865 444.4814 l
304.0229 444.1948 l
304.5063 444.0308 l
305.8223 443.5757 l
307.1416 443.1206 l
307.8467 442.875 l
308.457 442.666 l
309.7773 442.207 l
311.0967 441.748 l
311.6426 441.5591 l
312.4121 441.2886 l
313.7324 440.8257 l
315.0479 440.3623 l
315.4004 440.2393 l
316.3682 439.8994 l
317.6836 439.4321 l
319.0029 438.9648 l
319.126 438.9238 l
320.3232 438.4976 l
321.6387 438.0264 l
322.8184 437.604 l
322.958 437.5552 l
324.2734 437.0835 l
325.5938 436.6084 l
326.4785 436.2842 l
326.9131 436.1289 l
328.2285 435.6533 l
329.5479 435.1738 l
330.1064 434.9688 l
330.8643 434.6899 l
332.1836 434.2065 l
333.5 433.7227 l
333.7002 433.6489 l
334.8193 433.2354 l
336.1387 432.7476 l
337.2578 432.3335 l
337.4551 432.2598 l
338.7744 431.7676 l
340.0898 431.2759 l
340.7861 431.0137 l
341.4102 430.7803 l
342.7295 430.2842 l
344.0449 429.7842 l
344.2793 429.6982 l
N
344.2793 429.6982 m
345.3643 429.2842 l
346.6807 428.7798 l
347.7383 428.3784 l
348 428.2759 l
349.3154 427.772 l
350.6357 427.2637 l
351.1602 427.0586 l
351.9551 426.751 l
353.2705 426.2432 l
354.5537 425.7432 l
354.5898 425.7266 l
355.9063 425.21 l
357.2256 424.6938 l
357.9102 424.4233 l
358.5449 424.1733 l
359.8613 423.6528 l
361.1807 423.1284 l
361.2344 423.1079 l
362.4971 422.5996 l
363.8164 422.0747 l
364.5254 421.7881 l
365.1357 421.542 l
366.4521 421.0093 l
367.7715 420.4722 l
367.7793 420.4683 l
369.0869 419.9355 l
370.4063 419.3984 l
371.001 419.1523 l
371.7227 418.8535 l
373.042 418.3125 l
374.1895 417.833 l
374.3613 417.7632 l
375.6768 417.2139 l
376.9971 416.6606 l
377.3457 416.5171 l
378.3125 416.1074 l
379.6318 415.5498 l
380.4648 415.1973 l
380.9521 414.9927 l
382.2676 414.4312 l
383.5508 413.8818 l
383.5879 413.8657 l
384.9033 413.2959 l
386.2227 412.7261 l
386.6035 412.562 l
387.5391 412.1563 l
388.8584 411.5786 l
389.6211 411.2422 l
390.1777 411.0005 l
391.4941 410.4185 l
N
391.4941 410.4185 m
392.6084 409.9268 l
392.8135 409.8325 l
394.1289 409.2466 l
395.4482 408.6563 l
395.5557 408.6069 l
396.7686 408.062 l
398.084 407.4678 l
398.4727 407.2915 l
399.4043 406.8652 l
400.7188 406.2627 l
401.3545 405.9717 l
402.0391 405.6563 l
403.3545 405.0454 l
404.2031 404.6519 l
404.6738 404.4346 l
405.9941 403.8159 l
407.0146 403.3364 l
407.3096 403.1968 l
408.6289 402.5742 l
409.7939 402.0166 l
409.9453 401.9429 l
411.2646 401.3115 l
412.54 400.7012 l
412.585 400.6763 l
413.9004 400.041 l
415.2197 399.3975 l
415.248 399.3813 l
416.5352 398.75 l
417.8555 398.0986 l
417.9248 398.0659 l
419.1709 397.4429 l
420.4902 396.7827 l
420.5645 396.7461 l
421.8105 396.1191 l
423.126 395.4512 l
423.1709 395.4268 l
424.4453 394.7793 l
425.7451 394.1104 l
425.7607 394.1025 l
427.0811 393.418 l
428.2813 392.791 l
428.4014 392.7295 l
429.7168 392.041 l
430.7861 391.4746 l
431.0361 391.3398 l
432.3516 390.6396 l
433.2568 390.1553 l
433.6719 389.9307 l
434.9873 389.2168 l
435.6914 388.8359 l
N
435.6914 388.8359 m
436.3066 388.5 l
437.627 387.7744 l
438.0898 387.5195 l
438.9424 387.0449 l
440.2617 386.3105 l
440.4551 386.2012 l
441.5771 385.5693 l
442.7861 384.8848 l
442.8975 384.8193 l
444.2168 384.0645 l
445.082 383.5645 l
445.5332 383.3027 l
446.8525 382.5361 l
447.3438 382.25 l
448.168 381.7617 l
449.4883 380.9785 l
449.5693 380.9297 l
450.8076 380.1875 l
451.7617 379.6104 l
452.123 379.3926 l
453.4434 378.585 l
453.918 378.2939 l
454.7578 377.7734 l
456.041 376.9746 l
456.0781 376.9541 l
457.3936 376.1221 l
458.1309 375.6592 l
458.7139 375.2861 l
460.0332 374.4375 l
460.1846 374.3398 l
461.3486 373.5811 l
462.2012 373.0195 l
462.6689 372.7129 l
463.9844 371.835 l
464.1855 371.7041 l
465.3037 370.9492 l
466.1318 370.3848 l
466.623 370.0518 l
467.9395 369.1426 l
468.0459 369.0684 l
469.2588 368.2207 l
469.9268 367.749 l
470.5742 367.2852 l
471.7715 366.4297 l
471.8945 366.3438 l
473.21 365.3838 l
473.5781 365.1133 l
474.5293 364.4082 l
475.3535 363.7939 l
475.8496 363.4248 l
N
475.8496 363.4248 m
477.0918 362.4775 l
477.165 362.4209 l
478.4854 361.4043 l
478.7969 361.1582 l
479.8008 360.3721 l
480.4688 359.8428 l
481.1201 359.3184 l
482.1035 358.5225 l
482.4395 358.248 l
483.7021 357.2031 l
483.7559 357.1582 l
485.0752 356.0518 l
485.2676 355.8877 l
486.3906 354.9199 l
486.7969 354.5684 l
487.71 353.7646 l
488.2891 353.252 l
489.0264 352.5889 l
489.752 351.9326 l
490.3457 351.3828 l
491.1738 350.6133 l
491.665 350.1543 l
492.5625 349.2979 l
492.9814 348.8916 l
493.9199 347.9775 l
494.3008 347.6006 l
495.2393 346.6621 l
495.6172 346.2725 l
496.5225 345.3418 l
496.9365 344.9121 l
497.7725 344.0264 l
498.2559 343.5059 l
498.9854 342.707 l
499.5723 342.0557 l
500.166 341.3867 l
500.8916 340.5596 l
501.3096 340.0723 l
502.207 339.0059 l
502.416 338.752 l
503.4893 337.4355 l
503.5273 337.3906 l
504.5313 336.1172 l
504.8418 335.7061 l
505.5352 334.7969 l
506.1621 333.9482 l
506.502 333.4814 l
507.4365 332.1611 l
507.4814 332.0957 l
508.335 330.8457 l
508.7979 330.1406 l
N
Q
0 A
1 To
1 0 0 1 91.3335 667 0 Tp
0 Tv
1 Ap
800 Ar
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
0 XR
96 666 m
96 667 L
91.3335 667 L
91.3335 666 L
96 666 L
n
TP
3 Tr
%_ 0 50 XQ
/_Times-Roman 12 11.6191 -4.9629 Tf
0 Ts
100 100 Tz
0 Tt
%_0 0 100 100 Xu
%AI55J_GlyphSubst: GlyphSubstNone 
0 TA
%_ 0 XL
0 TY
0 TV
18 0 Xb
XB
0 0 5 TC
100 100 200 TW
25 TG
0 0 0 Ti
0 Ta
0 1 2 2 99 Th
0 Tq
240 Tg
0 0 Tl
0 Tc
0 Tw
(3) TX
(\r) TX 
TO
0 To
1 0 0 1 109 670 0 Tp
0 Tv
TP
0 Tr
0 O
0 g
(3) Tx 
(\r) TX 
TO
0 To
1 0 0 1 98.6665 607.3335 0 Tp
0 Tv
TP
0 Tr
(2.5) Tx 
(\r) TX 
TO
0 To
1 0 0 1 99.6665 545.3335 0 Tp
0 Tv
TP
0 Tr
(2.0) Tx 
(\r) TX 
TO
0 To
1 0 0 1 99.6665 483.3335 0 Tp
0 Tv
TP
0 Tr
(1.5) Tx 
(\r) TX 
TO
0 To
1 0 0 1 100.6665 420 0 Tp
0 Tv
TP
0 Tr
(1.0) Tx 
(\r) TX 
TO
0 To
1 0 0 1 107.6665 294 0 Tp
0 Tv
TP
0 Tr
(0) Tx 
(\r) TX 
TO
0 To
1 0 0 1 98.6665 357.334 0 Tp
0 Tv
TP
0 Tr
(0.5) Tx 
(\r) TX 
TO
0 To
1 0 0 1 131.3335 278 0 Tp
0 Tv
TP
0 Tr
(0.8) Tx 
(\r) TX 
TO
0 To
1 0 0 1 192 278 0 Tp
0 Tv
TP
0 Tr
(0.85) Tx 
(\r) TX 
TO
0 To
1 0 0 1 258.3335 278 0 Tp
0 Tv
TP
0 Tr
(0.9) Tx 
(\r) TX 
TO
0 To
1 0 0 1 319.666 278 0 Tp
0 Tv
TP
0 Tr
(0.95) Tx 
(\r) TX 
TO
0 To
1 0 0 1 383 278 0 Tp
0 Tv
TP
0 Tr
(1.00) Tx 
(\r) TX 
TO
0 To
1 0 0 1 447 278 0 Tp
0 Tv
TP
0 Tr
(1.05) Tx 
(\r) TX 
TO
0 To
1 0 0 1 512.334 278 0 Tp
0 Tv
TP
0 Tr
(1.10) Tx 
(\r) TX 
TO
0 To
1 0 0 1 65 542 0 Tp
0 Tv
TP
0 Tr
(\r) TX 
TO
0 Ap
1 g
0 R
0 G
518.6758 298.3936 m
518.1846 306.3037 517.5488 308.9395 v
516.9141 311.5742 515.1309 318.8701 511.6309 324.7559 c
508.1309 330.6406 496.915 345.5576 490.999 350.6543 c
485.084 355.75 470.834 367.5 462.584 372.25 c
461.0293 373.1445 459.9365 373.8184 459.1855 374.3203 C
457 376.166 L
452.7275 378.6924 442.2012 385.4619 439.5957 386.8105 c
436.334 388.5 413.2383 400.6025 407.9629 403.0742 c
402.6875 405.5454 379.668 415.875 372.375 418.8125 c
365.084 421.75 343.084 430.75 333.834 434.25 c
324.584 437.75 281.4292 452.0801 273.5229 454.6089 c
265.6167 457.1377 237.9395 465.7363 230.0293 468.0767 c
222.1191 470.417 156.9487 488.7085 153.9487 489.5078 c
150.9482 490.3071 133.5835 495.5 y
158.8667 502.6885 181.8906 508.9888 190.4868 511.3691 c
199.0835 513.75 241.8945 526.3374 249.8008 528.792 c
257.707 531.2471 280.8267 538.6123 287.7202 540.9116 c
294.6143 543.2109 322.291 552.7441 331.5176 556.1704 c
340.7432 559.5967 360.8711 567.269 370.334 571.2241 c
379.7979 575.1792 400.0566 584.0566 405.3271 586.561 c
410.5977 589.0649 423.2793 595.2007 430.1191 598.9014 c
436.96 602.6025 447.6699 608.415 453.252 612.0825 c
458.834 615.75 466.957 620.7671 472.5439 624.9927 c
478.1289 629.2183 483.3467 633.1694 487.6221 637.1245 c
491.8965 641.0796 500.6836 649.8096 504.1758 654.6704 c
507.668 659.5313 510.7129 663.4819 512.9668 668.7568 c
515.2207 674.0317 518.0186 676.9663 518.6758 692.4834 c
B
(Scales) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
519.166 298 m
469 298 l
469 365.166 l
469 368 l
470.334 367.334 l
468.666 368.834 472.334 365.834 v
476 362.834 477.834 362.834 482.5 358.334 c
487.166 353.834 490.5 352.5 495 347 c
499.5 341.5 503.5 336.666 506.834 332 c
510.166 327.334 511.666 326.666 513.666 321.666 c
515.666 316.666 518.166 310.834 518.666 307.166 c
519.166 303.5 519.166 298 y
b
518.8125 692.771 m
468.3125 692.771 l
468.3125 621.9375 l
469.1465 622.4375 l
473.1465 625.604 l
477.8125 628.9375 l
479.4785 630.271 481.9785 632.271 v
484.4785 634.271 489.4785 638.604 491.6465 641.104 c
492.9775 642.6411 494.9395 644.6187 497.0273 646.8047 c
498.3359 648.1748 499.6943 649.627 500.9785 651.104 c
503.0332 653.4668 504.4551 654.7529 505.9063 656.5625 c
506.8105 657.6895 507.7246 659.019 508.8125 660.9375 c
511.6465 665.9375 511.9785 666.604 514.3125 671.771 c
516.6465 676.9375 516.4785 675.771 517.4785 681.9375 c
518.4785 688.104 518.8125 692.771 y
b
0 To
0.9539 0.3003 -0.3003 0.9539 226 531 0 Tp
0 Tv
TP
0 Tr
0 g
/_Times-Roman 12.0005 11.6196 -4.9631 Tf
18.0008 0 Xb
XB
(120 degree contour) Tx 
(\r) TX 
TO
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
